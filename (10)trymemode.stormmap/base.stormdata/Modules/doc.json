{
    "_metadata": {
        "tagetMarkdownFile": "./docs/usage.md",
        "MDTitle": "Usage",
        "MDDescription": [
            "Generally, most of the functionalities are using chat commands. Simply type the commands in the chat box (like how you would normally chat with teammates).",
            ">Note: Remember to either use allies or all chat channel when try to use the commands. Public chat channels and Private Messages (PM) does not work.",
            "All commands have a short alias, which they both have identical functionality that allows for less typing.",
            "Some of the commands have an UI counterpart implemented, which will display a menu of options and features corresponding to the commands' functionality."
        ]
    },
    "libraries": [
        {
            "_metadata": {
                "libraryName": "Module Loader",
                "libraryFile": "LibModuleLoader.galaxy",
                "libraryId": "LibMODL",
                "libraryDescription": "A unified Module Loader Lib that allows you to choose which module to load.",
                "overrideMarkdown": true,
                "overrideMarkdownContent": "This module is for loading other modules. **DO NOT** modify this file in SC2Editor."
            }
        },
        {
            "_metadata": {
                "libraryName": "Utilities",
                "libraryFile": "LibUtilities.galaxy",
                "libraryId": "LibUTIL",
                "libraryDescription": "A Library with multiple utilities tools such as \"Toggle Fog Of War\", \"Toggle UI\", etc.",
                "overrideMarkdown": false,
                "overrideMarkdownContent": null
            },
            "commands": [
                {
                    "shortCommand": "tcdr",
                    "command": "togglecdr",
                    "description": [
                        "Toggle Mass CDR. This will reset the cooldown on all abilities on every game loop (0.0625s)",
                        "This is useful to bypass the limit of try mode's Toggle Cooldown, as it have a 1.5s cooldown between each reset."
                    ],
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Toggle Mass CDR"
                        },
                        {
                            "command": "{command}",
                            "description": "Toggle Mass CDR"
                        }
                    ]
                },
                {
                    "shortCommand": "trm",
                    "command": "togglerandommovement",
                    "description": [
                        "![trm screenshot](https://i.imgur.com/d4fg4Oj.png)",
                        "",
                        "Toggle random movement for selected units.",
                        "",
                        "This command will create a circle on the center of your camera. The selected units will start moving randomly in the circle.",
                        "This allows to practice various stuff such as skill-shots.",
                        "Run this command to turn off this functionality.",
                        "",
                        ">Tip: To get the most out of this tool, use [`alliancecontrolteamselection`](#cmd-alliancecontrolteamselection) to select desired units, then use [summon units](#cmd-summon) to let them move randomly.",
                        "",
                        ">Tip: Also use [`addbehavior`](#cmd-addbehavior) command to add the `Mounted` (`adb Mounted`) behavior for faster movement (mount speed), and `adb DisableWeaponsBehavior` to disable their auto attacks,",
                        "",
                        ">Note: You can still command the units that are moving randomly, but after all the commands are finished (e.g stopped), it will start moving randomly again to the circle"
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "radius",
                            "required": false,
                            "description": "The radius of the circle that units will be moved randomly",
                            "type": "float",
                            "defaultValue": 7.0
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} 10",
                            "description": "Toggle Random Movement with circle radius of 10."
                        },
                        {
                            "command": "{command}",
                            "description": "Toggle Random Movement with circle radius of default 7."
                        }
                    ]
                },
                {
                    "shortCommand": "marker",
                    "command": "addmarker",
                    "description": [
                        "Add a marker at the position of the first selected unit."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "MarkerID",
                            "required": true,
                            "description": "Defines the Marker ID to be added (up to 20).",
                            "type": "integer"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} 1",
                            "description": "Add marker 1 at the position of the first selected unit."
                        },
                        {
                            "command": "{command} 10",
                            "description": "Add marker 10 at the position of the first selected unit."
                        }
                    ]
                },
                {
                    "shortCommand": "markerc",
                    "command": "addmarkercamera",
                    "description": [
                        "Add a marker at the center position of the camera.",
                        "",
                        ">Tip: Also use [`togglecrosshair`](#cmd-togglecrosshair) command to set the location precisely."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "MarkerID",
                            "required": true,
                            "description": "Defines the Marker ID to be added (up to 20).",
                            "type": "integer"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} 1",
                            "description": "Add marker 1 at the center position of the camera."
                        },
                        {
                            "command": "{command} 10",
                            "description": "Add marker 10 at the center position of the camera."
                        }
                    ]
                },
                {
                    "shortCommand": "gmarker",
                    "command": "getmarker",
                    "description": [
                        "Get a Markers position in (X, Y, Z)."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "MarkerID",
                            "required": true,
                            "description": "Defines the Marker ID to be added (up to 20).",
                            "type": "integer"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} 1",
                            "description": "Get the position of Marker 1 in (X, Y, Z)."
                        },
                        {
                            "command": "{command} 10",
                            "description": "Get the position of Marker 10 in (X, Y, Z)."
                        }
                    ]
                },
                {
                    "shortCommand": "colmarker",
                    "command": "colormarker",
                    "description": [
                        "Change the color of the specific marker with RGB value. This also applies to future markers.",
                        "> Note: The color of each marker will be generated randomly when the game started."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "MarkerID",
                            "required": true,
                            "description": "Defines the Marker ID to be added (up to 20).",
                            "type": "integer"
                        },
                        {
                            "name": "Red",
                            "required": true,
                            "description": "Defines the Red color of the marker's RGB color. (0 - 255)",
                            "type": "integer"
                        },
                        {
                            "name": "Green",
                            "required": true,
                            "description": "Defines the Green color of the marker's RGB color. (0 - 255)",
                            "type": "integer"
                        },
                        {
                            "name": "Blue",
                            "required": true,
                            "description": "Defines the Blue color of the marker's RGB color. (0 - 255)",
                            "type": "integer"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} 1 255 0 0",
                            "description": "Change Marker 1 color to 255, 0, 0  (Red)"
                        },
                        {
                            "command": "{command} 10 0 0 0",
                            "description": "Change Marker 10 color to 0, 0, 0  (Black)"
                        },
                        {
                            "command": "{command} 10 0 0 0",
                            "description": "Change Marker 10 color to 0, 255, 255  (Cyan)"
                        }
                    ]
                },
                {
                    "shortCommand": "rmmarker",
                    "command": "removemarker",
                    "description": [
                        "Removes a specific marker."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "MarkerID",
                            "required": true,
                            "description": "Defines the Marker ID to be added (up to 20).",
                            "type": "integer"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} 1",
                            "description": "Removed Marker 1"
                        },
                        {
                            "command": "{command} 10",
                            "description": "Removed Marker 10"
                        }
                    ]
                },
                {
                    "shortCommand": "clmarker",
                    "command": "clearmarker",
                    "description": [
                        "Clear all created markers."
                    ],
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Clear all created markers."
                        },
                        {
                            "command": "{command}",
                            "description": "Clear all created markers."
                        }
                    ]
                },
                {
                    "shortCommand": "tch",
                    "command": "togglecrosshair",
                    "description": "Toggle to show a crosshair on the center of the camera. This allows for e.g more precise placement of [summon units](#cmd-summon) and [adding effects](#cmd-addeffectcamera).",
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Toggle showing crosshair"
                        },
                        {
                            "command": "{command}",
                            "description": "Toggle showing crosshair"
                        }
                    ]
                },
                {
                    "shortCommand": "tdb",
                    "command": "toggledebugmode",
                    "description": "Toggle Debug Mode by modifying the `libCore_gv_dEBUGDebuggingEnabled` variable)",
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Toggle Debug Mode"
                        },
                        {
                            "command": "{command}",
                            "description": "Toggle Debug Mode"
                        }
                    ]
                },
                {
                    "shortCommand": "tfow",
                    "command": "togglefogofwar",
                    "description": "Toggle Fog Of War. This can enable or disable full map vision.",
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Toggle Full Map Vision"
                        },
                        {
                            "command": "{command}",
                            "description": "Toggle Full Map Vision"
                        }
                    ]
                },
                {
                    "shortCommand": "tui",
                    "command": "toggleui",
                    "description": [
                        "Toggle User Interface. This can hide or show all the UIs including HP bar, talents panel, floating combat text, abilities bar etc.",
                        ">Note: If the UI is off, all abilities will be disabled."
                    ],
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Toggle In game UI"
                        },
                        {
                            "command": "{command}",
                            "description": "Toggle In game UI"
                        }
                    ]
                },
                {
                    "shortCommand": "cls",
                    "command": "clear",
                    "description": "Clear all text messages, including chat and debug messages with an optional delay.",
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "seconds",
                            "required": false,
                            "description": "Defines the delay to clear text messages in seconds.",
                            "defaultValue": 0,
                            "type": "float"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Clear all texts instantly"
                        },
                        {
                            "command": "{command} 5.4",
                            "description": "Clear all texts after 5.4 seconds"
                        }
                    ]
                },
                {
                    "shortCommand": "re",
                    "command": "restartgame",
                    "description": [
                        "Restart the map without needed to re-enter. This is extremely useful when you want to try the new modified XML files or galaxy scripts. ",
                        " >Note: It will **NOT** reload or add mods from `Includes.xml` automatically. You will need to manually re-enter for mods to be added."
                    ],
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Restart the game instantly"
                        },
                        {
                            "command": "{command}",
                            "description": "Restart the game instantly"
                        }
                    ]
                },
                {
                    "shortCommand": "sg",
                    "command": "startgame",
                    "description": "Start the game instantly (timer start, gate open, etc).",
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Start the game instantly"
                        },
                        {
                            "command": "{command}",
                            "description": "Start the game instantly"
                        }
                    ]
                },
                {
                    "shortCommand": "eg",
                    "command": "endgame",
                    "description": "End the game instantly and kick all players from the game.",
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "End the game instantly"
                        },
                        {
                            "command": "{command}",
                            "description": "End the game instantly"
                        }
                    ]
                },
                {
                    "shortCommand": "wg",
                    "command": "wingame",
                    "description": [
                        "Instantly declare a win for a team and end the game.",
                        "Generally left team is **Team 1** and right team is **Team 2**."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "TeamID",
                            "required": true,
                            "description": "Defines the team ID to win the game.",
                            "type": "integer"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} 1",
                            "description": "Win the game for Team 1"
                        },
                        {
                            "command": "{command} 2",
                            "description": "Win the game for Team 2"
                        }
                    ]
                },
                {
                    "shortCommand": "sco",
                    "command": "setcameraobject",
                    "description": [
                        "Manually set the camera object. The parameter is the id of `<CCamera id=\"xxx\">`.",
                        ">**WARNING**: Set a non existing camera will actually **crash** the game."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "camera",
                            "required": true,
                            "description": "Defines the camera object.",
                            "type": "string"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} BlizzardAllStars",
                            "description": "Set the camera object to BlizzardAllStars (default game camera)"
                        },
                        {
                            "command": "{command} Dflt",
                            "description": "Set the camera object to Dlft (default SC2 camera)"
                        }
                    ]
                },
                {
                    "shortCommand": "rco",
                    "command": "resetcameraobject",
                    "description": "Reset the game camera to `BlizzardAllStars` (default game camera)",
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Reset the game camera to BlizzardAllStars"
                        },
                        {
                            "command": "{command}",
                            "description": "Reset the game camera to BlizzardAllStars"
                        }
                    ]
                },
                {
                    "shortCommand": "frt",
                    "command": "forceruntrigger",
                    "description": [
                        "Force to Run a Trigger created by `TriggerCreate()` with ignoring conditions and wait until finish.",
                        "This can be used to run a trigger that bypass the `testConds`, such as `GameCheatsEnabled(c_gameCheatCategoryDevelopment)`.",
                        "",
                        "You can get the trigger name from the `TriggerCreate()` function in various galaxy files.",
                        "",
                        "For example, a debug chat trigger to start the Immortal objective in Battlefield of Eternity immediately:",
                        "",
                        "```c++",
                        "//--------------------------------------------------------------------------------------------------",
                        "// Trigger: MMBOE Debug - Start Immediately",
                        "//--------------------------------------------------------------------------------------------------",
                        "bool libMLBD_gt_MMBOEDebugStartImmediately_Func (bool testConds, bool runActions) {",
                        "    // Automatic Variable Declarations",
                        "    // Conditions",
                        "    if (testConds) {",
                        "        if (!((GameCheatsEnabled(c_gameCheatCategoryDevelopment) == true))) {",
                        "            return false;",
                        "        }",
                        "    }",
                        "",
                        "    // Actions",
                        "    if (!runActions) {",
                        "        return true;",
                        "    }",
                        "",
                        "    libMLBD_gv_mMBOEDebugUsed = true;",
                        "    libMLBD_gf_MMBOEDuelWarningStart();",
                        "    TimerStart(libMLBD_gv_mMBOEEventWarningTimer, 0.5, false, c_timeGame);",
                        "    return true;",
                        "}",
                        "",
                        "//--------------------------------------------------------------------------------------------------",
                        "void libMLBD_gt_MMBOEDebugStartImmediately_Init () {",
                        "    libMLBD_gt_MMBOEDebugStartImmediately = TriggerCreate(\"libMLBD_gt_MMBOEDebugStartImmediately_Func\");",
                        "    TriggerEnable(libMLBD_gt_MMBOEDebugStartImmediately, false);",
                        "    TriggerAddEventChatMessage(libMLBD_gt_MMBOEDebugStartImmediately, c_playerAny, \"-bd\", true);",
                        "}",
                        "```",
                        "The trigger name will be `libMLBD_gt_MMBOEDebugStartImmediately_Func`. By using this command (`frt libMLBD_gt_MMBOEDebugStartImmediately_Func`), you can bypass the `GameCheatsEnabled(c_gameCheatCategoryDevelopment)` restriction, which was required when using the `-bd` command."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "TriggerName",
                            "required": true,
                            "description": "Defines the trigger to be run",
                            "type": "string"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} libUIUI_gt_InputBackslashKeyDown_Func",
                            "description": "Force to run the trigger \"libUIUI_gt_InputBackslashKeyDown_Func\", which will show up the debug menu."
                        },
                        {
                            "command": "{command} libSprt_gt_DEBUGHaveAITakeOverAI_Func",
                            "description": "Force to run the trigger \"libSprt_gt_DEBUGHaveAITakeOverAI_Func\", which will have an AI take over your unit."
                        }
                    ]
                },
                {
                    "shortCommand": "acts",
                    "command": "alliancecontrolteamselection",
                    "description": [
                        "Toggle Alliance Control + Multi-Selection, a shortcut re-implementation to QA Cheat Menu's `/ac` and `ts`.",
                        "This will enable/disable \"Alliance Control\" (control units from other players, including Enemy) and \"Multi-Selection\" (selecting multiple units like Vikings and Samuro)."
                    ],
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Toggle Alliance Control + Multi-Selection"
                        },
                        {
                            "command": "{command}",
                            "description": "Toggle Alliance Control + Multi-Selection"
                        }
                    ]
                },
                {
                    "shortCommand": "mwi",
                    "command": "minionwaveinterval",
                    "description": [
                        "Get or Set the minion wave interval (Times to spawn a minion. Usually 30s but for 15s in ARAM.)"
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "seconds",
                            "required": false,
                            "description": "Defines interval for minion wave to spawn",
                            "defaultValue": "(The map's original interval, usually 30 but 15 for ARAMs)",
                            "type": "float"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Get the minion wave interval"
                        },
                        {
                            "command": "{command}",
                            "description": "Get the minion wave interval"
                        },
                        {
                            "command": "{shortCommand} 0.0625",
                            "description": "Set the minion wave to spawn every 0.0625 seconds (each game loop)"
                        },
                        {
                            "command": "{shortCommand} 100",
                            "description": "Set the minion wave to spawn every 100 seconds."
                        }
                    ]
                },
                {
                    "shortCommand": "lm",
                    "command": "loadmap",
                    "description": [
                        "End the game and load a .stormmap file instantly.",
                        "The `MapPath` is relative to:",
                        " - `*.stormmods/base.stormmap/` for CASC / MPQ storage",
                        " - `HEROES_INSTALL_LOCATION/maps/` for file system",
                        "",
                        "There are currently 4 built-in `.stormmaps` from CASC in Heroes, which the `MapPath` is:",
                        " - heroes/singleplayermaps/(10)trymemode.stormmap",
                        " - `heroes/singleplayermaps/startingexperience/tutorial01.stormmap`",
                        " - `heroes/singleplayermaps/startingexperience/tutorialmapmechanics.stormmap`",
                        " - `heroes/singleplayermaps/startingexperience/tutorialveteran.stormmap`",
                        "",
                        "You can also put a `.stormmap` file into `HEROES_INSTALL_LOCATION/maps/`, e.g `HEROES_INSTALL_LOCATION/maps/cool.stormmap`, which the `MapPath` will be `cool.stormmap`"
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "MapPath",
                            "required": true,
                            "description": "Defines the path to the stormmap",
                            "type": "string"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} heroes/singleplayermaps/startingexperience/tutorial01.stormmap",
                            "description": "Exit and Load the tutorial 1 map"
                        },
                        {
                            "command": "{command} heroes/singleplayermaps/startingexperience/tutorialveteran.stormmap",
                            "description": "Exit and Load the veteran tutorial map."
                        }
                    ]
                },
                {
                    "shortCommand": "fct",
                    "command": "floatingcombattext",
                    "description": [
                        "Show a custom floating combat text with different built-in templates.",
                        "",
                        "The table is the available combinations of `state` and `type`. Columns are `state` (e.g `Shield`) and Rows are `type` (e.g `NormalAmountGiven`):",
                        "",
                        "| `type` \\ `state` | `Ability` | `Basic` | `Heal` | `Mana` | `Shield` | `XP` | `Quest` | `Reduced` |",
                        "|-|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|",
                        "| `LesserAmountReceived` | ✔ | ✔ | ✔ | ✔ | ✔ | ❌ | ❌ | ❌ |",
                        "| `LesserAmountGiven` | ✔ | ✔ | ✔ | ✔ | ✔ | ❌ | ✔ | ❌ |",
                        "| `NormalAmountReceived` | ✔ | ✔ | ✔ | ✔ | ✔ | ✔ | ❌ | ❌ |",
                        "| `NormalAmountGiven` | ✔ | ✔ | ✔ | ✔ | ✔ | ✔ | ❌ | ❌ |",
                        "| `MediumAmountReceived` | ✔ | ✔ | ✔ | ✔ | ✔ | ✔ | ❌ | ❌ |",
                        "| `MediumAmountGiven` | ✔ | ✔ | ✔ | ✔ | ✔ | ❌ | ❌ | ❌ |",
                        "| `GreaterAmountReceived` | ✔ | ✔ | ✔ | ✔ | ✔ | ✔ | ❌ | ❌ |",
                        "| `GreaterAmountGiven` | ✔ | ✔ | ✔ | ✔ | ✔ | ❌ | ❌ | ❌ |",
                        "| `CritAmountReceived` | ✔ | ✔ | ✔ | ✔ | ✔ | ✔ | ❌ | ❌ |",
                        "| `CritAmountGiven` | ✔ | ✔ | ✔ | ✔ | ✔ | ❌ | ❌ | ❌ |",
                        "| `AmountReadable` | ❌ | ❌ | ✔ | ❌ | ✔ | ❌ | ❌ | ✔ |",
                        "| `CritAmountReadable` | ❌ | ✔ | ❌ | ❌ | ✔ | ❌ | ❌ | ❌ |",
                        "| `SelfAmountReceived` | ❌ | ❌ | ❌ | ❌ | ❌ | ✔ | ❌ | ❌ |",
                        "| `HealPrevented` | ✔ | ❌ | ❌ | ❌ | ❌ | ❌ | ❌ | ❌ |",
                        "| `QuestProgress` | ❌ | ✔ | ❌ | ❌ | ❌ | ❌ | ✔ | ❌ |",
                        "",
                        ">Note: The capitalizations of `type` is required to be followed."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "message",
                            "required": true,
                            "description": "Defines the message to be shown in Floating Combat Text",
                            "type": "string"
                        },
                        {
                            "name": "state",
                            "required": false,
                            "description": "Defines the state of the Floating Combat Text",
                            "type": "string",
                            "defaultValue": "Basic"
                        },
                        {
                            "name": "type",
                            "required": false,
                            "description": "Defines the type of the Floating Combat Text",
                            "type": "string",
                            "defaultValue": "NormalAmountGiven"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} 100",
                            "description": "Shows the FCT \"100\" with the style of basic attack (orange)"
                        },
                        {
                            "command": "{shortCommand} 50 XP SelfAmountReceived",
                            "description": "Shows the FCT \"50\" with the style of xp gathered (small purple text)"
                        },
                        {
                            "command": "{command} nice Quest QuestProgress",
                            "description": "Shows the FCT \"nice\" with the style of quest progressing (gold circle with \"!\")"
                        },
                        {
                            "command": "{command} 999 Shield CritAmountGiven",
                            "description": "Shows the FCT \"999\" with the style of critical shield (white with explosion style)"
                        }
                    ]
                },
                {
                    "shortCommand": "str",
                    "command": "string",
                    "description": [
                        "Display a string with the value of `TextExpressionAssemble` or `StringExternal`",
                        "This is pretty useful to quickly shows the string from the functions internally.",
                        "`mode` must be either `TextExpressionAssemble` or `StringExternal`"
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "mode",
                            "required": true,
                            "description": "Defines the mode of the string to be displayed.",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "required": true,
                            "description": "Defines the value of the string to be displayed",
                            "type": "string"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} TextExpressionAssemble Param/Expression/lib_Sprt_B1FD42AF",
                            "description": "Shows the string \"Set Mastery Ring...\" from supportlib"
                        },
                        {
                            "command": "{command} StringExternal Param/Value/lib_Sprt_F697F4C7",
                            "description": "Shows the string \"Game Speed should not exceed 8.0....\" from supportlib"
                        }
                    ]
                },
                {
                    "shortCommand": "pcs",
                    "command": "playcutscene",
                    "description": [
                        "Play a Cutscene file (`*.StormCutscene`) directly. Press `Esc` anytime to stop it.",
                        "",
                        "The file path is relative to `*.stormmod/base.stormdata`. (e.g If Cutscene file is in `mods/heroesdata.stormmod/base.stormdata/Cutscenes/EndOfMatch/EndOfMatch_LineUp_Tassadar.StormCutscene`, the path will be `Cutscenes/EndOfMatch/EndOfMatch_LineUp_Tassadar.StormCutscene`)"
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "mode",
                            "required": true,
                            "description": "Defines the path of the *.StormCutscene file.",
                            "type": "string"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} Cutscenes/Tutorial_CursedHollow.StormCutscene",
                            "description": "Plays the Tutorial Cutscene for Cursed Hollow"
                        },
                        {
                            "command": "{command} Cutscenes/StoreMuradin.StormCutscene",
                            "description": "Plays the Muradin Cutscene in the Collection Page (wait for 2 second to show Muradin)"
                        }
                    ]
                },
                {
                    "shortCommand": "sgs",
                    "command": "setgamespeed",
                    "description": [
                        "Set the game speed.",
                        "",
                        "The game speed can only between 0 - 4:",
                        "",
                        "| value | speed |",
                        "|-|-|",
                        "| 0 | Slower |",
                        "| 1 | Slow |",
                        "| 2 | Normal |",
                        "| 3 | Fast |",
                        "| 4 | Faster |"
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "speed",
                            "required": true,
                            "description": "Defines the game speed to be set (between 0 - 4).",
                            "type": "integer"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} 0",
                            "description": "Set the game speed to 0 (Slower)"
                        },
                        {
                            "command": "{command} 3",
                            "description": "Set the game speed to 3 (Fast)"
                        }
                    ]
                },
                {
                    "shortCommand": "rgs",
                    "command": "resetgamespeed",
                    "description": [
                        "Reset the game speed 2 (Normal)."
                    ],
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Reset the game speed 2 (Normal)."
                        },
                        {
                            "command": "{command}",
                            "description": "Reset the game speed 2 (Normal)."
                        }
                    ]
                },
                {
                    "shortCommand": "tti",
                    "command": "toggleterrainindicator",
                    "description": [
                        "Toggle Terrain Indicator (used by Diablo and Auriel, etc) for any units"
                    ],
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Toggle Terrain Indicator"
                        },
                        {
                            "command": "{command}",
                            "description": "Toggle Terrain Indicator"
                        }
                    ]
                }
            ]
        },
        {
            "_metadata": {
                "libraryName": "Units",
                "libraryFile": "LibUnits.galaxy",
                "libraryId": "LibUNIT",
                "libraryDescription": "A library with commands related to selected units, such as kill, spawn, etc.",
                "overrideMarkdown": false,
                "overrideMarkdownContent": null
            },
            "commands": [
                {
                    "shortCommand": "gu",
                    "command": "getunits",
                    "description": "Get all units owned by a specific players",
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "PlayerId",
                            "required": false,
                            "description": "Define which player to get all the units.",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Get all units own by whoever uses this command."
                        },
                        {
                            "command": "{command} 7",
                            "description": "Get all units owned by Player 7"
                        },
                        {
                            "command": "{command} 15",
                            "description": "Get all units owned by Player 15 (Player 15 usually are neutral mercenary camps.)"
                        }
                    ]
                },
                {
                    "shortCommand": "gsu",
                    "command": "getselectedunits",
                    "description": "Get all selected units from a specific player",
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "PlayerId",
                            "required": false,
                            "description": "Define which player to get all the units.",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Get all selected units from whoever uses this command"
                        },
                        {
                            "command": "{command} 6",
                            "description": "Get all selected units from Player 6"
                        }
                    ]
                },
                {
                    "shortCommand": "ku",
                    "command": "killunits",
                    "description": "Instantly kill all selected unit(s).",
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Instantly kill all selected unit(s)."
                        },
                        {
                            "command": "{command}",
                            "description": "Instantly kill all selected unit(s)."
                        }
                    ]
                },
                {
                    "shortCommand": "toi",
                    "command": "toggleoutputid",
                    "description": "Toggle displaying units' id mode. Which will shows the unit's id on the screen with a left click.",
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Toggle displaying units' id mode."
                        },
                        {
                            "command": "{command}",
                            "description": "Toggle displaying units' id mode."
                        }
                    ]
                },
                {
                    "shortCommand": "sum",
                    "command": "summon",
                    "description": [
                        "Spawn unit(s) at the centre of your camera location.",
                        ">Note: A new summoned unit will automatically added to select group.",
                        ">Note: To control the summoned units, you will need to enable multi-selection from either the [`alliancecontrolteamselection`](#cmd-alliancecontrolteamselection) command or QA Cheat Menu (`ts`, also use `/ac` if the unit does not belong to you), which will behave like Vikings and Samuro with Illusion Master. ",
                        ">Note: If your hero is Samuro, it will have some weird behavior for multi selection due to Blizzard's implementation of Samuro."
                    ],
                    "uiAvailable": true,
                    "parameters": [
                        {
                            "name": "UnitId",
                            "required": true,
                            "description": "Define the unit to be spawned. You can get the id from <CUnit id=\"xxx\"> in the game XML files.",
                            "type": "string"
                        },
                        {
                            "name": "Amount",
                            "required": false,
                            "description": "Define the amount of unit(s) to be spawned",
                            "type": "string",
                            "defaultValue": 1
                        },
                        {
                            "name": "PlayerId",
                            "required": false,
                            "description": "Define which player to own the unit that spawned.",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        },
                        {
                            "name": "Scale",
                            "required": false,
                            "description": "Define scale of the unit(s) to be spawned. default size is 1.0",
                            "type": "float",
                            "defaultValue": 1.0
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} TownTownHallL2",
                            "description": "Summon a tower structure to the player who used the command"
                        },
                        {
                            "command": "{command} HeroRaynor 3",
                            "description": "Summon 3 Raynor Hero units for the player who used the command"
                        },
                        {
                            "command": "{command} HeroMalGanis 2 4",
                            "description": "Summon 2 Mal'Ganis Hero units for player 4"
                        },
                        {
                            "command": "{shortCommand} JungleGraveGolemDefender 2 1 0.5",
                            "description": "Summon 2 boss golems for player 1 with the unit scale to 0.5 (half the size)"
                        },
                        {
                            "command": "{shortCommand} CatapultMinion 10 5 2",
                            "description": "Summon 10 Catapult Minions for player 5 with the unit scale to 2 (double the size)"
                        }
                    ]
                },
                {
                    "shortCommand": "clu",
                    "command": "clearunits",
                    "description": [
                        "Clear all summoned unit(s) (summoned by the [summon](#cmd-summon) command) for a Player. This is useful for remove large numbers of summoned units, or when summoned untargetable/unselectable units that are not able to use the [killunits](#cmd-killunits) command.",
                        "",
                        ">Note: Due to the memory limitation, only the **last 500 summoned units** will be able to remove with this command. Older units will not be affected, if you would like to remove ALL summoned units, either respec your hero, or restart the game.",
                        "",
                        ">Self note: For each `MaxPlayer[16][100]`, is equivalent to around 30 `EventChatMessage` triggers. So more memory assigned to this, the less trigger can be used."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "PlayerId",
                            "required": false,
                            "description": "Define to clear which player's summoned unit(s).",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Clear summoned unit(s) from player who used the command"
                        },
                        {
                            "command": "{command} 6",
                            "description": "Clear summoned unit(s) from Player 6"
                        }
                    ]
                },
                {
                    "shortCommand": "rpu",
                    "command": "replaceunit",
                    "description": [
                        "Replace all selected units to the Target Unit.",
                        ">Note: Don't recommend using this command, as weird stuff will happen if you replaced to an non-existing unit or unit getting killed. If it happens, use the debug menu to respawn your hero for resetting."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "TargetUnitId",
                            "required": true,
                            "description": "Define the selected units to be replaced with. You can get the id from <CUnit id=\"xxx\"> in the game XML files.",
                            "type": "string"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} HeroRaynor",
                            "description": "Replace all selected unit(s) to Raynor Hero."
                        },
                        {
                            "command": "{command} CatapultMinion",
                            "description": "Replace all selected unit(s) to Catapult Minion."
                        }
                    ]
                },
                {
                    "shortCommand": "up",
                    "command": "unitproperty",
                    "description": [
                        "Allow to show / modify a selected units' property, such as max health, regen, movement speed etc.",
                        "If the `type` parameter is not supplied, it will return the value of the property. If the `type` parameter was set, it will modify the selected unit's property.",
                        "",
                        "The `type` parameters accept either the `Type (int)` or `Type (string)` below.",
                        "",
                        "| Type (int) | Type (string) | Galaxy file constant |",
                        "|-|-|-|",
                        "| 0 | life | c_unitLife |",
                        "| 1 | lifepercent | c_unitPropLifePercent |",
                        "| 2 | lifemax | c_unitPropLifeMax |",
                        "| 3 | liferegen | c_unitPropLifeRegen |",
                        "| 4 | energy | c_unitPropEnergy |",
                        "| 5 | energypercent | c_unitPropEnergyPercent |",
                        "| 6 | energymax | c_unitPropEnergyMax |",
                        "| 7 | energyregen | c_unitPropEnergyRegen |",
                        "| 8 | shields | c_unitPropShields |",
                        "| 9 | shieldspercent | c_unitPropShieldsPercent |",
                        "| 10 | shieldsmax | c_unitPropShieldsMax |",
                        "| 11 | shieldsregen | c_unitPropShieldsRegen |",
                        "| 12 | kills | c_unitPropKills |",
                        "| 17 | height | c_unitPropHeight |",
                        "| 18 | movementspeed | c_unitPropMovementSpeed |",
                        "| 20 | resources | c_unitPropResources |",
                        "| 21 | radius | c_unitPropRadius |",
                        "| 22 | xp | c_unitPropXP |",
                        "| 23 | level | c_unitPropLevel |",
                        "| 24 | killxp | c_unitPropKillXP |",
                        "| 28 | basemovementspeed | c_unitPropBaseMovementSpeed |",
                        "| 29 | movementspeedcurrent | c_unitPropMovementSpeedCurrent |",
                        "| 30 | lifeexpectedpercent | c_unitPropLifeExpectedPercent |"
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "type",
                            "required": true,
                            "description": "Set the type of the property to be get / modified. Please refer to the table above.",
                            "type": "integer/string"
                        },
                        {
                            "name": "value",
                            "required": false,
                            "description": "The value to be set for the property type",
                            "type": "float",
                            "defaultValue": null
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} life",
                            "description": "Shows the unit's current HP"
                        },
                        {
                            "command": "{shortCommand} 0 1",
                            "description": "Set the selected units's Current HP to 1; MAX SPEEDZ TAZZZZDINGO"
                        },
                        {
                            "command": "{command} 6",
                            "description": "Show the selected unit's Max Energy, usually refers as resource bar, such as mana, Tracer bullet, Chen's brew etc."
                        },
                        {
                            "command": "{command} energymax 10000",
                            "description": "Set the selected unit's Max Energy for 10000, usually refers as resource bar, such as mana, Tracer bullet, Chen's brew etc."
                        },
                        {
                            "command": "{command} 28",
                            "description": "Shows the base movement speed of selected units."
                        },
                        {
                            "command": "{command} basemovementspeed 10",
                            "description": "Set the base movement speed of selected units to 10. Note that base speed for heroes is 4.8398"
                        }
                    ]
                },
                {
                    "shortCommand": "getb",
                    "command": "getbehavior",
                    "description": "List all active behaviors for selected units.",
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "List all active behaviors for selected units"
                        },
                        {
                            "command": "{command}",
                            "description": "List all active behaviors for selected units"
                        }
                    ]
                },
                {
                    "shortCommand": "clb",
                    "command": "clearbehavior",
                    "description": "Clear all active behaviors for selected units.",
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Clear all active behaviors for selected units"
                        },
                        {
                            "command": "{command}",
                            "description": "Clear all active behaviors for selected units"
                        }
                    ]
                },
                {
                    "shortCommand": "adb",
                    "command": "addbehavior",
                    "description": "Add a behavior to selected unit(s). Which are generally from `<CBehavior*>`, such as `<CBehaviorBuff id=\"xxx\">` or `<CBehaviorAbility id=\"xxx\">`.",
                    "uiAvailable": true,
                    "parameters": [
                        {
                            "name": "BehaviorId",
                            "required": true,
                            "description": "Defines the behavior id to be added to selected units",
                            "type": "string"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} MedivhArcaneBrillianceItem",
                            "description": "Add Medivh's Arcane Brilliance Ability to selected units"
                        },
                        {
                            "command": "{shortCommand} PermaInvulnerable",
                            "description": "Make all selected units permanent Invulnerable"
                        }
                    ]
                },
                {
                    "shortCommand": "rmb",
                    "command": "removebehavior",
                    "description": [
                        "Remove a behavior from selected unit(s). Which are generally from `<CBehavior*>`, such as `<CBehaviorBuff id=\"xxx\">` or `<CBehaviorAbility id=\"xxx\">`.",
                        "> Tips: You can get active behaviors with the `getbehavior` command above."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "BehaviorId",
                            "required": true,
                            "description": "Defines the behavior id to be removed from selected units",
                            "type": "string"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} MedivhArcaneBrillianceItem",
                            "description": "Remove Medivh's Arcane Brilliance Ability from selected units"
                        },
                        {
                            "command": "{shortCommand} PermaInvulnerable",
                            "description": "No longer makes all selected units permanent Invulnerable"
                        }
                    ]
                },
                {
                    "shortCommand": "ade",
                    "command": "addeffect",
                    "description": "Add an Effect to selected unit(s). Which are generally from `<CEffect*>`, such as `<CEffectSet id=\"xxxx\">` or `<CEffectCreatePersistent id=\"xxx\">`.",
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "EffectId",
                            "required": true,
                            "description": "Defines the effect id to be added to selected unit(s).",
                            "type": "string"
                        },
                        {
                            "name": "amount",
                            "required": false,
                            "description": "Defines the amount of effects to be added to the units",
                            "type": "integer",
                            "defaultValue": "1"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} StormSuicide",
                            "description": "Make all selected units \"suicide\" a.k.a kill the unit"
                        },
                        {
                            "command": "{shortCommand} MedivhPolyBombPersistent",
                            "description": "Make all selected units affect by Medivh's Polybomb"
                        },
                        {
                            "command": "{shortCommand} GreymaneCursedBulletDamagePercentDamage 5",
                            "description": "Make all selected units hit by Greymane's Cursed Bullet (damage) 5 times in a row."
                        }
                    ]
                },
                {
                    "shortCommand": "adec",
                    "command": "addeffectcamera",
                    "description": "Add an Effect to the center of the camera. Which are generally from `<CEffect*>`, such as `<CEffectSet id=\"xxxx\">` or `<CEffectCreatePersistent id=\"xxx\">`.",
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "EffectId",
                            "required": true,
                            "description": "Defines the effect id to be added to the center of the camera.",
                            "type": "string"
                        },
                        {
                            "name": "amount",
                            "required": false,
                            "description": "Defines the amount of effects to be added to the center of the camera.",
                            "type": "integer",
                            "defaultValue": "1"
                        },
                        {
                            "name": "PlayerID",
                            "required": false,
                            "description": "The Player ID for the effect owner",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} DropUnderworldPowerupPersistent",
                            "description": "Add some Haunted Mines Skulls to camera location"
                        },
                        {
                            "command": "{shortCommand} UnderworldBossRootsCreatePersistent",
                            "description": "Add Haunted Mines's boss root animation to camera location"
                        },
                        {
                            "command": "{command} NecromancerRaiseSkeletonCreationPersistent 10",
                            "description": "Spawn 10 Xul's skeleton to camera location"
                        },
                        {
                            "command": "{shortCommand} NecromancerRaiseSkeletonCreationPersistent 10 6",
                            "description": "Spawn 10 Xul's skeleton to camera location with the effect owner of Player 6"
                        }
                    ]
                },
                {
                    "shortCommand": "rme",
                    "command": "removeeffect",
                    "description": "Remove an Effect from selected unit(s). Which are generally from `<CEffect*>`, such as `<CEffectSet id=\"xxxx\">` or `<CEffectCreatePersistent id=\"xxx\">`.",
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "EffectId",
                            "required": true,
                            "description": "Defines the effect id to be removed from selected unit(s).",
                            "type": "string"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} MedivhPolyBombPersistent",
                            "description": "No longer make selected unit(s) affect by Medivh's Polybomb"
                        },
                        {
                            "command": "{shortCommand} MedivhPolyBombPersistent",
                            "description": "No longer make selected unit(s) affect by Medivh's Polybomb"
                        }
                    ]
                },
                {
                    "shortCommand": "rmec",
                    "command": "removeeffectcamera",
                    "description": "Remove an Effect from the center of the camera. Which are generally from `<CEffect*>`, such as `<CEffectSet id=\"xxxx\">` or `<CEffectCreatePersistent id=\"xxx\">`.",
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "EffectId",
                            "required": true,
                            "description": "Defines the effect id to be removed from the center of the camera.",
                            "type": "string"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} DropUnderworldPowerupPersistent",
                            "description": "Remove Haunted Mines Skulls from camera location"
                        },
                        {
                            "command": "{shortCommand} UnderworldBossRootsCreatePersistent",
                            "description": "Remove Haunted Mines's boss root animation from camera location"
                        }
                    ]
                },
                {
                    "shortCommand": "pa",
                    "command": "playanimation",
                    "description": [
                        "Play an Animation for selected unit(s).",
                        ">Note: There are Walk, Attack, A to Z animations etc"
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "AnimationId",
                            "required": true,
                            "description": "Defines the Animation ID to be played on selected unit(s)",
                            "type": "string"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} Attack",
                            "description": "Play the Attack Animation for selected unit(s)"
                        },
                        {
                            "command": "{shortCommand} Walk",
                            "description": "Play the Walk animation for selected unit(s)"
                        }
                    ]
                },
                {
                    "shortCommand": "rma",
                    "command": "removeanimation",
                    "description": [
                        "Remove an Animation from selected unit(s).",
                        ">Note: There are Walk, Attack, A to Z animations etc"
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "AnimationId",
                            "required": true,
                            "description": "Defines the Animation ID to be removed from selected unit(s)",
                            "type": "string"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} Attack",
                            "description": "Stop the Attack Animation for selected unit(s)"
                        },
                        {
                            "command": "{shortCommand} Walk",
                            "description": "Stop the Walk animation for selected unit(s)"
                        }
                    ]
                },
                {
                    "shortCommand": "sam",
                    "command": "sendactormessage",
                    "description": [
                        "Send an Actor Message for selected unit(s). Generally from `<CActor*>`, the `<on send=\"xxx\">`.",
                        ">Note: The command allows spaces for the parameter, since most actor messages have spaces."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "ActorMessage",
                            "required": true,
                            "description": "Defines the Actor Message to be sent. (This parameter allows spaces.)",
                            "type": "string"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} AnimPlay Spell Spell,A 0 -1.000000 -1.000000 1.000000 AsTimeScale",
                            "description": "Play the A Spell animation, different on each hero"
                        },
                        {
                            "command": "{shortCommand} StatusIncrement StatusBarHide",
                            "description": "Hide the status bar, HP bar"
                        }
                    ]
                },
                {
                    "shortCommand": "guo",
                    "command": "getunitownership",
                    "description": "Gets the Ownership (Player ID) of selected unit(s).",
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Gets the Ownership (Player ID) of selected unit(s)."
                        },
                        {
                            "command": "{command}",
                            "description": "Gets the Ownership (Player ID) of selected unit(s)."
                        }
                    ]
                },
                {
                    "shortCommand": "cuo",
                    "command": "changeunitownership",
                    "description": [
                        "Changes ownership of the selected unit(s).",
                        ">Note: 0 is neutral, which cannot be selected once ownership have changed."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "PlayerId",
                            "required": true,
                            "description": "The new owner of the selected unit(s).",
                            "type": "integer"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} 1",
                            "description": "Change all selected units's ownership to Player 1"
                        },
                        {
                            "command": "{shortCommand}",
                            "description": "Change all selected units's ownership to Player 6"
                        }
                    ]
                },
                {
                    "shortCommand": "tnwcd",
                    "command": "togglenoweaponcd",
                    "description": "Constantly resetting the weapons (auto attack) cooldown, effectively increasing weapon speed.",
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Constantly resetting the weapons (auto attack) cooldown"
                        },
                        {
                            "command": "{command}",
                            "description": "Constantly resetting the weapons (auto attack) cooldown"
                        }
                    ]
                },
                {
                    "shortCommand": "adw",
                    "command": "addweapon",
                    "description": "Add a weapon (Basic Attack) to selected unit(s). Usually found in `<CWeapon* id='xxx'>`",
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "WeaponID",
                            "required": true,
                            "description": "The ID of the weapon",
                            "type": "string"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} AlexstraszaDragonConeWeapon",
                            "description": "Add Alexstrasza's Dragon Form weapon to selected unit(s)"
                        },
                        {
                            "command": "{command} FirebatHeroWeapon",
                            "description": "Add Blaze's weapon to selected unit(s)"
                        }
                    ]
                },
                {
                    "shortCommand": "rmw",
                    "command": "removeweapon",
                    "description": "Remove a weapon (Basic Attack) from selected unit(s). Usually found in `<CWeapon* id='xxx'>`",
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "WeaponID",
                            "required": true,
                            "description": "The ID of the weapon",
                            "type": "string"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} AnaHeroWeapon",
                            "description": "Remove Ana's weapon from selected unit(s)"
                        },
                        {
                            "command": "{command} DVaMechWeapon",
                            "description": "Remove D.va mech mode's weapon from selected unit(s)"
                        }
                    ]
                },
                {
                    "shortCommand": "getw",
                    "command": "getweapon",
                    "description": "Get all weapons (Basic Attack) from selected unit(s). Usually found in `<CWeapon* id='xxx'>`",
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Get all weapons from selected units"
                        },
                        {
                            "command": "{command}",
                            "description": "Get all weapons from selected units"
                        }
                    ]
                },
                {
                    "shortCommand": "clw",
                    "command": "clearweapon",
                    "description": "Remove all weapons (Basic Attack) from selected unit(s). Usually found in `<CWeapon* id='xxx'>`",
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Remove all weapons from selected units"
                        },
                        {
                            "command": "{command}",
                            "description": "Remove all weapons from selected units"
                        }
                    ]
                }
            ]
        },
        {
            "_metadata": {
                "libraryName": "Players",
                "libraryFile": "LibPlayers.galaxy",
                "libraryId": "LibPLYR",
                "libraryDescription": "Commands that are related to Players, eg, scoreboard, respawn timer, etc",
                "overrideMarkdown": false,
                "overrideMarkdownContent": null
            },
            "commands": [
                {
                    "shortCommand": "aqs",
                    "command": "addqueststack",
                    "description": [
                        "Add a specific amount of quest stacks to a player."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "stacks",
                            "required": true,
                            "description": "The amount of stack to be added for a player",
                            "type": "integer"
                        },
                        {
                            "name": "PlayerId",
                            "required": false,
                            "description": "The Player ID for the quest stacks to be added",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} 10",
                            "description": "Add 10 quest stacks to whoever uses this command"
                        },
                        {
                            "command": "{command} 20 6",
                            "description": "Add 10 quest stack to Player 6."
                        }
                    ]
                },
                {
                    "shortCommand": "rqs",
                    "command": "removequeststack",
                    "description": [
                        "Remove a specific amount of quest stacks from a player."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "stacks",
                            "required": true,
                            "description": "The amount of stack to be removed from a player",
                            "type": "integer"
                        },
                        {
                            "name": "PlayerId",
                            "required": false,
                            "description": "The Player ID for the quest stacks to be removed",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} 10",
                            "description": "Remove 10 quest stacks to whoever uses this command"
                        },
                        {
                            "command": "{command} 20 6",
                            "description": "Remove 10 quest stack to Player 6."
                        }
                    ]
                },
                {
                    "shortCommand": "tmq",
                    "command": "togglemassquest",
                    "description": [
                        "Toggle mass quest completion mode to give stack every game tick (0.0625s) for whoever uses this command.",
                        ">Note: This is useful on heroes with actual infinite stacking such as Zuljin or Nazeebo. However due to Integer / Floating Point overflow, after reached certain amount for the quest, the actual functionality will be overflowed, such as Nazeebo HP reduced to 1 if having max stacks with lv4 extra HP per stack"
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "stacks",
                            "required": false,
                            "description": "The amount of stack to be added every game tick (0.0626s)",
                            "type": "integer",
                            "defaultValue": 1
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} 10",
                            "description": "Enable mass quest completion mode and give 10 stacks every game tick if not enabled"
                        },
                        {
                            "command": "{command}",
                            "description": "Disable mass quest completion mode if enabled"
                        }
                    ]
                },
                {
                    "shortCommand": "smr",
                    "command": "setmasteryring",
                    "description": [
                        "Set the Mastery Ring level. The ring below the hero will be automatically updated.",
                        ">Note: If the new Level is lower than the current one, you may need to respawn(e.g suicide) the selected units."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "MasteryRingLevel",
                            "required": true,
                            "description": "The level of the mastery ring to be set.",
                            "type": "integer"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} 0",
                            "description": "Remove the mastery ring from the player"
                        },
                        {
                            "command": "{shortCommand} 3",
                            "description": "Set the mastery ring to Level 3."
                        }
                    ]
                },
                {
                    "shortCommand": "ttt",
                    "command": "toggletalenttree",
                    "description": "Toggle the display of the talents selection tree.",
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Toggle the display of the talents selection tree."
                        },
                        {
                            "command": "{command}",
                            "description": "Toggle the display of the talents selection tree."
                        }
                    ]
                },
                {
                    "shortCommand": "tpgt",
                    "command": "togglepausegametalent",
                    "description": "Toggle whether to pause the game when viewing talents, similar to heroes tutorial.",
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Toggle whether to pause the game when viewing talents"
                        },
                        {
                            "command": "{command}",
                            "description": "Toggle whether to pause the game when viewing talents"
                        }
                    ]
                },
                {
                    "shortCommand": "adt",
                    "command": "addtalent",
                    "description": [
                        "Add a talent to a player, generally found in `<CTalent id=\"xxxx\">`.",
                        ">Note: Some of the talents won't work, so you might want to experiment a bit."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "TalentId",
                            "required": true,
                            "description": "The talent id to be added",
                            "type": "string"
                        },
                        {
                            "name": "PlayerId",
                            "required": false,
                            "description": "The target player id to have the talent being added.",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} MedivhForceOfWillArcaneExplosion",
                            "description": "Add Medivh's Arcane Explosion Talent to whoever uses this command"
                        },
                        {
                            "command": "{shortCommand} MalfurionCelestialAlignment 2",
                            "description": "add Malfurion's Celestial Alignment Talent to Player 2"
                        }
                    ]
                },
                {
                    "shortCommand": "aat",
                    "command": "addalltalent",
                    "description": [
                        "Add all talents to a player.",
                        "The `HeroId` can be either the ID of `<CHero id=\"xxx\">`, which will add all of the talents from that hero to the player, or it can be `ALL`, which will add ALL the talents in the game to the player.",
                        ">Note: Some of the talents won't work, so you might want to experiment a bit."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "HeroId",
                            "required": true,
                            "description": "The talents from the Hero / all the talents in the game to be added from a player",
                            "type": "string"
                        },
                        {
                            "name": "PlayerId",
                            "required": false,
                            "description": "The target player id to have the talent being added.",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} Tyrande",
                            "description": "Add all the talents from Tyrande to the player whoever uses the command"
                        },
                        {
                            "command": "{command} Firebat 2",
                            "description": "Add all the talents from Blaze to Player 2"
                        },
                        {
                            "command": "{shortCommand} ALL",
                            "description": "Add ALL the talents from the game to the player whoever uses the command"
                        },
                        {
                            "command": "{command} ALL 10",
                            "description": "Add ALL the talents from the game to the player 10"
                        }
                    ]
                },
                {
                    "shortCommand": "rmt",
                    "command": "removetalent",
                    "description": [
                        "Remove a talent from a player, generally found in `<CTalent id=\"xxxx\">`.",
                        ">Note: Some of the talents won't work, so you might want to experiment a bit."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "TalentId",
                            "required": true,
                            "description": "The talent id to be removed",
                            "type": "string"
                        },
                        {
                            "name": "PlayerId",
                            "required": false,
                            "description": "The target player id to have the talent being removed.",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} MedivhForceOfWillArcaneExplosion",
                            "description": "Removed Medivh's Arcane Explosion Talent from whoever uses this command"
                        },
                        {
                            "command": "{shortCommand} MalfurionCelestialAlignment 2",
                            "description": "Removed Malfurion's Celestial Alignment Talent from Player 2"
                        }
                    ]
                },
                {
                    "shortCommand": "rmat",
                    "command": "removealltalent",
                    "description": [
                        "Remove all talents from a player.",
                        "The `HeroId` can be either the ID of `<CHero id=\"xxx\">`, which will remove all of the talents from that hero from the player, or it can be `ALL`, which will remove ALL the talents in the game from the player.",
                        ">Note: Some of the talents won't work, so you might want to experiment a bit."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "HeroId",
                            "required": true,
                            "description": "The talents from the Hero / all the talents in the game to be removed from a player",
                            "type": "string"
                        },
                        {
                            "name": "PlayerId",
                            "required": false,
                            "description": "The target player id to have the talent being added.",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} Tyrande",
                            "description": "Remove all the talents from Tyrande from the player whoever uses the command"
                        },
                        {
                            "command": "{command} Firebat 2",
                            "description": "Remove all the talents from Blaze from Player 2"
                        },
                        {
                            "command": "{shortCommand} ALL",
                            "description": "Remove ALL the talents from the game from the player whoever uses the command"
                        },
                        {
                            "command": "{command} ALL 10",
                            "description": "Remove ALL the talents from the game from the player 10"
                        }
                    ]
                },
                {
                    "shortCommand": "ent",
                    "command": "enabletalent",
                    "description": "Enable a disabled talent for all players. Generally found in `<CTalent id=\"xxxx\">`.",
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "TalentId",
                            "required": true,
                            "description": "The talent id to be enabled.",
                            "type": "string"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} RagnarosLavaWave",
                            "description": "Enable Rag's Lava Wave talent, which was disabled in ARAM."
                        },
                        {
                            "command": "{shortCommand} MaievUmbralBindPursuitOfVengeance",
                            "description": "Enable Maiev's Pursuit Of Vengeance talent"
                        }
                    ]
                },
                {
                    "shortCommand": "dist",
                    "command": "disabletalent",
                    "description": [
                        "Disable a for all players. Generally found in `<CTalent id=\"xxxx\">`.",
                        ">Note: This only lock the selection of the talent. If the player already took the talent, it will not have any effect on the player."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "TalentId",
                            "required": true,
                            "description": "The talent id to be disabled.",
                            "type": "string"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} RagnarosLavaWave",
                            "description": "Disable Rag's Lava Wave talent, similar to ARAM."
                        },
                        {
                            "command": "{shortCommand} MaievUmbralBindPursuitOfVengeance 0",
                            "description": "Disable Maiev's Pursuit Of Vengeance talent"
                        }
                    ]
                },
                {
                    "shortCommand": "rst",
                    "command": "respawntime",
                    "description": [
                        "Override the current respawn timer for all players.",
                        ">Notice: Due to the system limitation, if you set to 0, it will change it to 0.0625 automatically (1 game tick)."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "seconds",
                            "required": true,
                            "description": "The respawn time to be set for all players",
                            "type": "float"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} 99",
                            "description": "set the respawn timer to 99 seconds"
                        },
                        {
                            "command": "{shortCommand} 0",
                            "description": "set the respawn timer to 0.0625 second"
                        }
                    ]
                },
                {
                    "shortCommand": "score",
                    "command": "setscore",
                    "description": [
                        "Set the score for the scoreboard (some of them will shows in tab screen). This is good to use when some talents interact with scoreboard such as Zagara's Infest.",
                        ">Note: Though Infest internal function limits to `524%`, max of fixed value, but details are out of scope here.",
                        "You can obtain these FIELDs from `ScoreValueData.xml` in `heroesdata.stormmod`",
                        ">Note: Some fields uses Integer and some uses Fixed. However because this function is unified using `PlayerScoreValueSetFromInt()`, all decimals will be removed. As such, the max value for fixed is `524287` and `2147483647` for Integer. This limitation might change later."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "Field",
                            "required": true,
                            "description": "The field to be modified in the scoreboard.",
                            "type": "string"
                        },
                        {
                            "name": "Value",
                            "required": true,
                            "description": "The value to be set for the field in the scoreboard.",
                            "type": "integer"
                        },
                        {
                            "name": "PlayerId",
                            "required": false,
                            "description": "The player id for the modification to be applied.",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} HeroDamage 0",
                            "description": "Set the field \"Hero Damage\" to 0 for the player who use this command."
                        },
                        {
                            "command": "{shortCommand} SoloKill 524287",
                            "description": "Set the field \"Kills\" to 5242873 for the player who use this command"
                        },
                        {
                            "command": "{shortCommand} Healing 1000 2",
                            "description": "Set the field \"Healing\" to 1000 for the player 2"
                        }
                    ]
                },
                {
                    "shortCommand": "rsp",
                    "command": "respawnpoint",
                    "description": "Modify the respawn point for a player. Either at the current camera location or its default location.",
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "Action",
                            "required": true,
                            "description": "Choose the action of the command. (set = set the respawn location at camera location, reset = reset all respawn location)",
                            "type": "string"
                        },
                        {
                            "name": "PlayerId/all",
                            "required": false,
                            "description": "Set the player id for the spawn modification to take effect, use \"all\" for all players.",
                            "type": "integer/string",
                            "defaultValue": "The player id of whoever used this command."
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} set all",
                            "description": "set the respawn point for all players at the current camera location"
                        },
                        {
                            "command": "{shortCommand} set",
                            "description": "set the respawn point to player who uses the command at the current camera location"
                        },
                        {
                            "command": "{command} set 6",
                            "description": "set the respawn point for player 6 at camera location"
                        },
                        {
                            "command": "{shortCommand} reset 2",
                            "description": "reset player 2's respawn point to default location"
                        },
                        {
                            "command": "{shortCommand} reset all",
                            "description": "reset all player's respawn point to its default respawn location (hall of storms)."
                        }
                    ]
                },
                {
                    "shortCommand": "sol",
                    "command": "setoverlay",
                    "description": [
                        "Set the in-game overlay (e.g golden overlay for Uther's Divine Shield). ",
                        ">Note: The path is relative to `*.storm*/base.gamedata/`, usually with the extension of `*.stormcutscene`."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "OverlayPath",
                            "required": true,
                            "description": "The path of the overlay file, relative to base.stormdata.",
                            "type": "string"
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} Cutscenes/GameUI_InvulnerableOverlay.StormCutscene",
                            "description": "Set the overlay to \"Invulnerable\", e.g Divine Shield / Sanctification."
                        },
                        {
                            "command": "{command} cutscenes\\gameui_gorgeoverlay.stormcutscene",
                            "description": "Set the overlay to Stitches Gorge."
                        }
                    ]
                },
                {
                    "shortCommand": "rol",
                    "command": "resetoverlay",
                    "description": "Remove all the overlays with the default one.",
                    "uiAvailable": false,
                    "parameters": [],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Remove all the overlays with the default one."
                        },
                        {
                            "command": "{command}",
                            "description": "Remove all the overlays with the default one."
                        }
                    ]
                },
                {
                    "shortCommand": "gcl",
                    "command": "getcatalog",
                    "description": [
                        "Directly get a Catalog value (a.k.a XMLs) from a player.",
                        "",
                        "The `CatalogReference` string consist of three parts: `<Category Type>,<Category Entry>,<Catalog Field Path>` separated by comma, whereas:",
                        "- `<Category Type>`: The type of the catalog, which usually is the \"seconds word\" of the entry. Take `CBehaviorBuff` as example, it consist of three parts: ",
                        "  - `C` (Catalog)",
                        "  - `Behavior` (Type) `<-- This One`",
                        "  - `Buff` (Sub-Type)",
                        "  - The value is the second \"Capitalised Word\": `Behavior`. Similarly, `CAbilEffectInstant`, the value will be `Abil`, `CValidatorPlayerTalent` will be `Validator`.",
                        "- `<Category Entry>`: The ID of the target Category. (`id=\"xxx\"`)",
                        "- `<Catalog Field Path>`: The field path of the targeted `<Category Entry>`.",
                        "  - Nested level uses `.` for representation. If the target field is not `value=\"xxx\", it need to be nested here as well.`",
                        "  - Arrays uses `[n]` to specify the numeric order",
                        "  - If an entry can exist multiple times with different index such as `<Flags>`, use `[Index]`, such as `Flags[AllowSelfCast]`",
                        "",
                        "Therefore, consider the following XML (extracted from `wizarddata.xml`, Li ming's data file):",
                        "```xml",
                        "<?xml version=\"1.0\" encoding=\"us-ascii\"?>",
                        "<Catalog>",
                        "  <!-- Data trimmed -->",
                        "  <CWeaponLegacy id=\"HeroWizardWeapon\" parent=\"StormHeroFastWeapon\">",
                        "    <Icon value=\"Assets\\Textures\\storm_temp_btn-upgrade-zerg-meleeattacks-level3.dds\" />",
                        "    <DisplayEffect value=\"WizardHeroWeaponDamage\" />",
                        "    <MinScanRange value=\"5.5\" />",
                        "    <Range value=\"5.5\" />",
                        "    <Period value=\"1\" />",
                        "    <PreswingBeforeAttack value=\"0.25\" />",
                        "    <PreswingBetweenAttacks value=\"0.25\" />",
                        "    <Effect value=\"WizardWeaponLaunchSwitch\" />",
                        "  </CWeaponLegacy>",
                        "</Catalog>",
                        "```",
                        "In order to get the reference to her Basic attack range, the `CatalogReference` string will be `Weapon,HeroWizardWeapon,Range`",
                        "",
                        "Another Example: (Extracted from `firebat.xml`, Blaze's Data file)",
                        "```xml",
                        "<?xml version=\"1.0\" encoding=\"us-ascii\"?>",
                        "<Catalog>",
                        "  <!-- Data trimmed -->",
                        "  <CAbilEffectTarget id=\"FirebatJetPropulsion\" parent=\"StormSkillshotDashParent\">",
                        "    <Effect value=\"FirebatJetPropulsionOffsetPersistent\" />",
                        "    <Cost>",
                        "      <Vital index=\"Energy\" value=\"45\" />",
                        "      <Cooldown TimeUse=\"10\" />",
                        "    </Cost>",
                        "    <MoveLocation ProjectionDistanceScale=\"14\" />",
                        "    <CursorEffect value=\"FirebatJetPropulsionSquareSearchArea\" />",
                        "    <CmdButtonArray index=\"Execute\" DefaultButtonFace=\"FirebatJetPropulsion\">",
                        "      <Flags index=\"AllowSelfCast\" value=\"0\" />",
                        "    </CmdButtonArray>",
                        "    <Activity value=\"Jet Propulsion\" />",
                        "    <CastIntroTime value=\"0.375\" />",
                        "    <ShowProgressArray index=\"Cast\" value=\"1\" />",
                        "  </CAbilEffectTarget>",
                        "</Catalog>",
                        "```",
                        "In order to get his Jet Propulsion (E) Cooldown Reference, the `CatalogReference` will be `Abil,FirebatJetPropulsion,Cost.Cooldown.TimeUse`",
                        "",
                        "Another Example: (Extracted from `stukovdata.xml`, Stukov's Data file: Stukov's Talent `Biotic Armor`, gains 15 Armor to ally affect by healing pathogen)",
                        "```xml",
                        "<?xml version=\"1.0\" encoding=\"us-ascii\"?>",
                        "<Catalog>",
                        "  <!-- Data trimmed -->",
                        "  <CBehaviorBuff id=\"StukovHealingPathogenBioticArmorPhysicalArmorBehavior\" parent=\"StormArmor\">",
                        "    <BehaviorCategories index=\"BuffResistant\" value=\"1\" />",
                        "    <RemoveValidatorArray value=\"StukovTargetHasHealingPathogen\" />",
                        "    <ArmorModification>",
                        "      <ArmorSet index=\"Hero\">",
                        "        <ArmorMitigationTable index=\"Basic\" value=\"15\" />",
                        "      </ArmorSet>",
                        "      <ArmorSet index=\"Merc\">",
                        "        <ArmorMitigationTable index=\"Basic\" value=\"15\" />",
                        "      </ArmorSet>",
                        "      <ArmorSet index=\"Monster\">",
                        "        <ArmorMitigationTable index=\"Basic\" value=\"15\" />",
                        "      </ArmorSet>",
                        "      <ArmorSet index=\"Summon\">",
                        "        <ArmorMitigationTable index=\"Basic\" value=\"15\" />",
                        "      </ArmorSet>",
                        "      <ArmorSet index=\"Structure\">",
                        "        <ArmorMitigationTable index=\"Basic\" value=\"15\" />",
                        "      </ArmorSet>",
                        "      <ArmorSet index=\"Minion\">",
                        "        <ArmorMitigationTable index=\"Basic\" value=\"15\" />",
                        "      </ArmorSet>",
                        "    </ArmorModification>",
                        "  </CBehaviorBuff>",
                        "</Catalog>",
                        "```",
                        "In order to reference the armor value against Structure, the `CatalogReference` will be `Behavior,StukovHealingPathogenBioticArmorPhysicalArmorBehavior,ArmorModification.ArmorSet[Structure].ArmorMitigationTable[Basic]`."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "CatalogReference",
                            "required": true,
                            "description": "The Reference to the specific catalog field",
                            "type": "string"
                        },
                        {
                            "name": "PlayerID",
                            "required": false,
                            "description": "The Player ID for the catalog modification",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} Effect,WizardTeleportCalamityDamage,Amount",
                            "description": "Get Li-Ming's Calamity damage from whoever uses this command"
                        },
                        {
                            "command": "{shortCommand} Abil,VarianCharge,Cost.Vital[Energy]",
                            "description": "Get Varian's Charge mana cost from whoever uses this command"
                        },
                        {
                            "command": "{shortCommand} Behavior,Mounted,Modification.UnifiedMoveSpeedFactor 2",
                            "description": "Get the mount speed for all Heroes from Player 2"
                        },
                        {
                            "command": "{shortCommand} Weapon,StukovHeroWeapon,Period",
                            "description": "Getl Stukov's Basic Attack speed from whoever uses this command"
                        },
                        {
                            "command": "{shortCommand} Weapon,ChromieHeroWeapon,Effect",
                            "description": "Get Chromie's Basic Attack Effect from whoever uses this command"
                        },
                        {
                            "command": "{shortCommand} Behavior,DehakaDarkSwarm,Modification.StateFlags[SuppressCollision] 2",
                            "description": "Get Dehaka's Dark Swarm Ability Suppress Collision flag value when active from Player 2"
                        }
                    ]
                },
                {
                    "shortCommand": "mcl",
                    "command": "modifycatalog",
                    "description": [
                        "Directly modify a Catalog value (a.k.a XMLs) for a player in runtime.",
                        "",
                        "For how to obtain and construct `CatalogReference`, Please refer to the [`getcatalog`](#cmd-getcatalog-description) command.",
                        "",
                        "**Caveats:**",
                        " - Some of the fields are READ-ONLY, meaning it cannot be modified, e.g `Unit,HeroChromie,PlaneArray[Air]` (Unable to make Chromie become an air unit like Medivh Raven). This would require an override to the XML instead (see [modding.md](modding.md)).",
                        " - The catalog modification is applied after parental inheritance, meaning that it is not possible to modify a parent (`parent=\"xxx\"`) for its effect to apply to all child catalogs. You must need to do it on each of the child catalogs.",
                        " - It is not possible \"create\" a value that does not exist after the map loaded. Meaning it can only modify value based on existed ones (after inherit attributes from parent)"
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "CatalogReference",
                            "required": true,
                            "description": "The Reference to the catalog field to be modified",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "required": true,
                            "description": "The value to be set for the specified catalog field",
                            "type": "float"
                        },
                        {
                            "name": "PlayerID",
                            "required": false,
                            "description": "The Player ID for the catalog modification",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        }
                    ],
                    "examples": [
                        {
                            "command": "{command} Effect,WizardTeleportCalamityDamage,Amount 9999",
                            "description": "Modify Li=Ming's Calamity damage to 9999 for the whoever uses this command"
                        },
                        {
                            "command": "{shortCommand} Abil,VarianCharge,Cost.Vital[Energy] 5",
                            "description": "Modify Varian's Charge mana cost to 5 for whoever uses this command"
                        },
                        {
                            "command": "{shortCommand} Behavior,Mounted,Modification.UnifiedMoveSpeedFactor -0.3 2",
                            "description": "Modify the mount speed for all Heroes to -30% (30% slower instead of faster) for Player 2"
                        },
                        {
                            "command": "{shortCommand} Weapon,StukovHeroWeapon,Period 0.0625",
                            "description": "Modify Stukov's Basic Attack speed to 16 (1 second performs 16 attacks = 0.0625 period per AA) for whoever uses this command"
                        },
                        {
                            "command": "{shortCommand} Weapon,ChromieHeroWeapon,Effect WizardWeaponLaunchSwitch",
                            "description": "Modify Chromie's Basic Attack to behave like Li-ming's Basic Attack (Shooting a Purple Missile) for whoever uses this command"
                        },
                        {
                            "command": "{shortCommand} Behavior,DehakaDarkSwarm,Modification.StateFlags[SuppressCollision] 0 2",
                            "description": "Modify Dehaka's Dark Swarm Ability to no longer Suppress Collision When active (No longer pass though units) for Player 2"
                        }
                    ]
                },
                {
                    "shortCommand": "xp",
                    "command": "experience",
                    "description": [
                        "Gives Experience to a Specific Player.",
                        "",
                        "The `SourceId` can be represent as an Integer with the source value of:",
                        "",
                        "|`SourceId`|Galaxy file constant|",
                        "|-|-|",
                        "|0|`libGame_ge_XPSources_Debug`|",
                        "|1|`libGame_ge_XPSources_Trickle`|",
                        "|2|`libGame_ge_XPSources_Minion`|",
                        "|3|`libGame_ge_XPSources_Creep`|",
                        "|4|`libGame_ge_XPSources_Hero`|",
                        "|5|`libGame_ge_XPSources_Structure`|",
                        "|6|`libGame_ge_XPSources_RegenGlobe`|"
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "Amount",
                            "required": true,
                            "description": "The amount of xp to be given",
                            "type": "integer"
                        },
                        {
                            "name": "PlayerId",
                            "required": false,
                            "description": "The Player ID for the XP to be given to",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        },
                        {
                            "name": "SourceId",
                            "required": false,
                            "description": "The integer value of the xp source",
                            "type": "integer",
                            "defaultValue": 0
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand} 10",
                            "description": "Grant 10 xp to whoever use this command"
                        },
                        {
                            "command": "{command} 100 6",
                            "description": "Grant 100 xp to Player 6"
                        },
                        {
                            "command": "{command} 100 1 2",
                            "description": "Grant 100 xp to Player 1 with its source set to minions"
                        }
                    ]
                },
                {
                    "shortCommand": "togai",
                    "command": "toggleai",
                    "description": [
                        "Toggle to enable/disable AI for a Player.",
                        "",
                        ">Note: This will also enable/disable AI for units summoned via `[summon units](#cmd-summon)` command."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "PlayerID",
                            "required": false,
                            "description": "The Player ID for the AI to be enabled/disabled",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Toggle AI for whoever use this command"
                        },
                        {
                            "command": "{shortCommand} 10",
                            "description": "Toggle AI for Player 10"
                        },
                        {
                            "command": "{command} 2",
                            "description": "Toggle AI for Player 2"
                        }
                    ]
                },
                {
                    "shortCommand": "enai",
                    "command": "enableai",
                    "description": [
                        "Enable AI for a Player.",
                        "",
                        ">Note: This will also enable AI for units summoned via `[summon units](#cmd-summon)` command."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "PlayerID",
                            "required": false,
                            "description": "The Player ID for the AI to be enabled",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Enable AI for whoever use this command"
                        },
                        {
                            "command": "{shortCommand} 10",
                            "description": "Enable AI for Player 10"
                        },
                        {
                            "command": "{command} 2",
                            "description": "Enable AI for Player 2"
                        }
                    ]
                },
                {
                    "shortCommand": "disai",
                    "command": "disableai",
                    "description": [
                        "Disable AI for a Player.",
                        "",
                        ">Note: This will also disable AI for units summoned via `[summon units](#cmd-summon)` command."
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "PlayerID",
                            "required": false,
                            "description": "The Player ID for the AI to be disabled",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Disable AI for whoever use this command"
                        },
                        {
                            "command": "{shortCommand} 10",
                            "description": "Disable AI for Player 10"
                        },
                        {
                            "command": "{command} 2",
                            "description": "Disable AI for Player 2"
                        }
                    ]
                },
                {
                    "shortCommand": "diffai",
                    "command": "difficultyai",
                    "description": [
                        "Get/Set the AI Difficulty for a Player.",
                        "",
                        "The difficulty settings are below:",
                        "",
                        "| DifficultyId | Friendly Name (`GameString.txt`) | Galaxy Constant (`AILib_h.galaxy`) |",
                        "|-|-|-|",
                        "| 0 | Unknown | `libAIAI_ge_HeroAIDifficulty_Null` |",
                        "| 1 | Tuto1Enemy | `libAIAI_ge_HeroAIDifficulty_HeroAITutorial1Enemy` |",
                        "| 2 | Tuto1Ally | `libAIAI_ge_HeroAIDifficulty_HeroAITutorial1Ally` |",
                        "| 3 | TutoMMEnemy | `libAIAI_ge_HeroAIDifficulty_HeroAITutorialMapMechanicEnemy` |",
                        "| 4 | TutoMMAlly | `libAIAI_ge_HeroAIDifficulty_HeroAITutorialMapMechanicAlly` |",
                        "| 5 | Beginner | `libAIAI_ge_HeroAIDifficulty_HeroAITryMeMode` |",
                        "| 6 | Unknown | `libAIAI_ge_HeroAIDifficulty_HeroAITryMeModeAlly` |",
                        "| 7 | Beginner | `libAIAI_ge_HeroAIDifficulty_HeroAIVeryEasy` |",
                        "| 8 | Beginner | `libAIAI_ge_HeroAIDifficulty_HeroAIVeryEasyWithHumanAlly` |",
                        "| 9 | Recruit | `libAIAI_ge_HeroAIDifficulty_HeroAIEasy` |",
                        "| 10 | Recruit | `libAIAI_ge_HeroAIDifficulty_HeroAIEasyWithHumanAlly` |",
                        "| 11 | Adept | `libAIAI_ge_HeroAIDifficulty_HeroAIMedium` |",
                        "| 12 | Veteran | `libAIAI_ge_HeroAIDifficulty_HeroAIVeryHard` |",
                        "| 13 | Elite | `libAIAI_ge_HeroAIDifficulty_HeroAIElite` |"
                    ],
                    "uiAvailable": false,
                    "parameters": [
                        {
                            "name": "PlayerID",
                            "required": false,
                            "description": "The Player ID for the AI to be enable/disabled",
                            "type": "integer",
                            "defaultValue": "The player id of whoever used this command."
                        },
                        {
                            "name": "DifficultyID",
                            "required": false,
                            "description": "The difficulty to be set",
                            "type": "integer",
                            "defaultValue": null
                        }
                    ],
                    "examples": [
                        {
                            "command": "{shortCommand}",
                            "description": "Get the AI difficulty for whoever uses this command"
                        },
                        {
                            "command": "{shortCommand} 2 11",
                            "description": "Set the AI difficulty for Player 2 to HeroAIMedium"
                        },
                        {
                            "command": "{command} 6",
                            "description": "Get the AI difficulty for Player 6"
                        },
                        {
                            "command": "{command} 7 9",
                            "description": "Set the AI difficulty for Player 7 to HeroAIEasy"
                        }
                    ]
                }
            ]
        },
        {
            "_metadata": {
                "libraryName": "Builder Mode",
                "libraryFile": "LibBuilderMode.galaxy",
                "libraryId": "libBULM",
                "libraryDescription": "A Builder Library that allows you to place objects anywhere in the map.",
                "overrideMarkdown": true,
                "overrideMarkdownContent": [
                    "**This system is still in a early development.**",
                    "Builder mode allows you to place objects to anywhere in the map. The units will constantly teleport to your cursor (follow your cursor). Remember to select `/ac` and `ts` in QA menu (this will added automatically in future development).",
                    "To use builder mode, select a unit, or units and press `backspace`. Builder mode will then be activated and you can place the units where you like.",
                    "To place the unit(s), press `backspace` again to deactivate builder mode."
                ]
            }
        },
        {
            "_metadata": {
                "libraryName": "FPS Mode",
                "libraryFile": "LibFPSMode.galaxy",
                "libraryId": "libFPSM",
                "libraryDescription": "A First Person Shooter like Library that allows you to see the map in first person camera.",
                "overrideMarkdown": true,
                "overrideMarkdownContent": [
                    "**This system is still in a early development.**",
                    "FPS Mode allows you to look at the map by using a first person camera on your unit. The camera will constantly look forward and turn as well as long as the mode is activated.",
                    "To toggle FPS mode, simply use the `fps` chat command.",
                    "### Controls:",
                    " - `u` : Move your unit forward. (It will also clear queue commands and **Hold Position** after moved.)",
                    " - `← (arrow key)` : Turn your unit and camera to left.",
                    " - `→ (arrow key)` : Turn your unit and camera to right.",
                    " - `↑ (arrow key)` : Turn your camera upwards.",
                    " - `↓ (arrow key)` : Turn your camera downwards."
                ]
            }
        },
        {
            "_metadata": {
                "libraryName": "Free Camera Mode",
                "libraryFile": "LibFreeCameraMode.galaxy",
                "libraryId": "libFRCM",
                "libraryDescription": "Free Camera Mode allows you to change the angle of the camera easily.",
                "overrideMarkdown": true,
                "overrideMarkdownContent": [
                    "**This system is still in a early development.**",
                    "Free Camera Mode allows you to use `Middle Mouse Wheel` to freely change your camera angel and direction.",
                    "To enable or disable, simply use the chat command `tfc` or `togglefreecamera`!",
                    ">Note: Camera pan (move the camera by pushing mouse to the edge) will be disabled when free camera mode is active"
                ]
            }
        },
        {
            "_metadata": {
                "libraryName": "Funny Stuff",
                "libraryFile": "LibFunny.galaxy",
                "libraryId": "libFUNY",
                "libraryDescription": "Random useless stuff just for the lolz.",
                "overrideMarkdown": true,
                "overrideMarkdownContent": ">Vm0weE1HRnRVWGRPVmxwT1ZsZG9WRmxVU205alJsVjNWMjFHYUZKdVFsaFdiWFF3VmtkS1NGVnVjRnBXVmxsM1dWWmFTMWRYUmtsYVJscFhUVEF4TkZkV1dsWmtNbFpJVkd0c1ZXSkdTbGhXYlhoM1UxWmtXV05GZEZSaVZscFhWR3hhYjFReFdsVlNiV2hoVmpOQ1ExUnNSVGxRVVQwOQ=="
            }
        }
    ]
}