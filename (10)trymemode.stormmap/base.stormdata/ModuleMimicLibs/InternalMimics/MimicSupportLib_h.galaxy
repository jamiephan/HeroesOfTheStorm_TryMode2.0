include "TriggerLibs/HeroesLib_h"
include "TriggerLibs/GameLib_h"

//--------------------------------------------------------------------------------------------------
// Library: Support
//--------------------------------------------------------------------------------------------------
// Constants
const string MimicSupportLib_gv_performanceTestFPSLogFile = "FPS_Log";
const int MimicSupportLib_gv_dataMiningNumberOfManaBuckets = 10;
const int MimicSupportLib_gv_dataMiningMaxNumberOfDifferentManaRegenSources = 14;
const fixed MimicSupportLib_gv_dataMiningPeriodicSendPeriod = 60.0;
const fixed MimicSupportLib_gv_gPU2021ExtendedDurationXPGlobesDuration = 45.0;
const fixed MimicSupportLib_gv_gPU2021ExtendedDurationXPGlobesXPMod = 0.25;

// Structures
struct MimicSupportLib_gs_DataMiningPlayerData {
    fixed lv_lastManaValue;
    int[MimicSupportLib_gv_dataMiningNumberOfManaBuckets + 1] lv_timeSpentInEachManaBucket;
    fixed[MimicSupportLib_gv_dataMiningMaxNumberOfDifferentManaRegenSources + 1] lv_manaRegenAmounts;
};

struct MimicSupportLib_gs_QACheatsControlsPanel {
    int lv_mainDialog;
    int lv_behaviorApplyButton;
    int lv_behaviorRemoveButton;
    int lv_behaviorCleanseButton;
    int lv_behaviorListPulldown;
    int lv_alliedControlCheckbox;
    int lv_cooldownsCheckbox;
    int lv_showMapCheckbox;
    int lv_visionCheckbox;
    int lv_gridCheckbox;
    int lv_tVECheckbox;
    int lv_freeCheckbox;
    int lv_toggleSelectionCheckbox;
    int lv_toggleWeaponsCheckbox;
    int lv_speedCountEditbox;
    int lv_executeSpeedButton;
    int lv_spawnUnitListPulldown;
    int lv_orderCheckbox;
    int lv_chaosCheckbox;
    int lv_neutralCheckbox;
    int lv_spawnUnitButton;
    int lv_closeButton;
    int lv_debugKillButton;
    int lv_refreshUnitButton;
    int lv_moveUnitButton;
    int lv_refreshCooldownsButton;
    int lv_cameraAngleEditbox;
    int lv_toggleDebugCameraCheckbox;
    int lv_setCameraAngleButton;
    int lv_debugRespawnButton;
    int lv_spawnItemListPulldown;
    int lv_itemCountEditbox;
    int lv_spawnItemButton;
    int lv_respawnStructuresButton;
    int lv_killStructuresButton;
};

struct MimicSupportLib_gs_RS_Structure {
    point lv_buildingPosition;
    string lv_buildingType;
    fixed lv_buildingFacing;
};

struct MimicSupportLib_gs_RS_Town {
    MimicSupportLib_gs_RS_Structure[libGame_gv_townMaxStructureCount + 1] lv_structureArray;
};

// Variable Declarations
bool MimicSupportLib_gv_performanceTestPerformanceTestRunning;
bool[libCore_gv_bALMaxPlayers + 1] MimicSupportLib_gv_statTrackingOn;
fixed[libCore_gv_bALMaxPlayers + 1] MimicSupportLib_gv_statTrackingStartTime;
int MimicSupportLib_gv_statTrackingPlayers;
fixed MimicSupportLib_gv_dataMiningTimeStampofLastPeriodicTransmit;
timer MimicSupportLib_gv_dataMiningPeriodicTimer;
string[MimicSupportLib_gv_dataMiningMaxNumberOfDifferentManaRegenSources + 1] MimicSupportLib_gv_dataMiningManaRegenSourceNames;
MimicSupportLib_gs_DataMiningPlayerData[libCore_gv_bALMaxPlayers + 1] MimicSupportLib_gv_dataMining_PlayerData;
int MimicSupportLib_gv_heroMasteryRingsMaxRank;
unit MimicSupportLib_gv_qACheatsSelectedUnit;
bool MimicSupportLib_gv_qACheatsSeekingApplyTarget;
bool MimicSupportLib_gv_qACheatsSeekingRemoveTarget;
int MimicSupportLib_gv_qACheatsSelectedTeam;
unitgroup MimicSupportLib_gv_qACheatsSpawnedUnitsGroup;
int MimicSupportLib_gv_qACheatsSelectedBehavior;
int MimicSupportLib_gv_qACheatsSelectedSpawnUnit;
bool MimicSupportLib_gv_qACheatsWeaponsDisabled;
MimicSupportLib_gs_QACheatsControlsPanel MimicSupportLib_gv_qACheatsControlsPanel;
string[31] MimicSupportLib_gv_compiledBehaviorList;
string[31] MimicSupportLib_gv_qACheatsCompiledSpawnUnitsList;
string[6] MimicSupportLib_gv_qACheatsCompiledSpawnItemsList;
timer MimicSupportLib_gv_dEBUGBalanceProbeTimer;
fixed MimicSupportLib_gv_dEBUGBalanceProbeTimerDuration;
bool MimicSupportLib_gv_dEBUGDesignCamEnabled;
fixed MimicSupportLib_gv_soundRepeatDelay;
bool MimicSupportLib_gv_soundRepeatActive;
string MimicSupportLib_gv_soundRepeatCurrentAbility;
unit MimicSupportLib_gv_soundRepeatCasterUnit;
point MimicSupportLib_gv_soundRepeatTargetPoint;
unit MimicSupportLib_gv_soundRepeatTargetUnit;
int MimicSupportLib_gv_dEBUGXPPassiveBalancerTeam1Player;
int MimicSupportLib_gv_dEBUGXPPassiveBalancerTeam2Player;
bool MimicSupportLib_gv_dEBUGXPPassiveBalancerEnable;
bool MimicSupportLib_gv_dEBUGXPBoostEnable;
fixed MimicSupportLib_gv_dEBUGXPBoostMultiplier;
fixed MimicSupportLib_gv_dEBUGXPPassiveBoostMultiplier;
int MimicSupportLib_gv_dEBUGXPPassiveBoostTeam;
int MimicSupportLib_gv_dEBUGXPBoostTeam;
bool MimicSupportLib_gv_dEBUGXPTrickleOnly;
bool MimicSupportLib_gv_dEBUGXPSourceHero;
bool MimicSupportLib_gv_dEBUGXPSourceMinion;
bool MimicSupportLib_gv_dEBUGXPSourceStructure;
bool MimicSupportLib_gv_dEBUGXPSourceCreep;
bool MimicSupportLib_gv_dEBUGSelectionEnabled;
bool MimicSupportLib_gv_dEBUGTalentDebugEnabled;
bool MimicSupportLib_gv_dEBUGCombatTextEnabled;
bool MimicSupportLib_gv_dEBUGXPTextEnabled;
bool MimicSupportLib_gv_dEBUGHeroSelectWait;
bool MimicSupportLib_gv_dEBUGHeroMimic;
bool MimicSupportLib_gv_dEBUG60SecondPauseOnOff;
bool MimicSupportLib_gv_dEBUGDebugMessagesEnabled;
bool MimicSupportLib_gv_dEBUGCinematicsModeEnabled;
bool MimicSupportLib_gv_dEBUGMapTextEnabled;
bool MimicSupportLib_gv_dEBUGBonusMinionXP;
bool MimicSupportLib_gv_dEBUGNoRegen;
MimicSupportLib_gs_RS_Town[libGame_gv_townMaxTownCount + 1] MimicSupportLib_gv_rS_Towns;
fixed MimicSupportLib_gv_debug_GameTimeDelta;
unitgroup MimicSupportLib_gv_dEBUGDPSTrackerGroup;
fixed MimicSupportLib_gv_dEBUGDPSTrackerTotalDamage;
fixed MimicSupportLib_gv_dEBUGDPSTrackerTrackingInterval;
timer MimicSupportLib_gv_dEBUGDPSTrackerTimer;
fixed MimicSupportLib_gv_dEBUGDPSTrackerTime;
bool MimicSupportLib_gv_dEBUGSapperMinionsEnabled;
fixed MimicSupportLib_gv_dEBUGBaselineArmorValue;
fixed MimicSupportLib_gv_dEBUGBaselineSpellPowerValue;
bool MimicSupportLib_gv_gPU2021ExtendedDurationXPGlobesEnabled;

// Function Declarations
void MimicSupportLib_gf_PerformanceTestStartPerformanceTest (string lp_name);
void MimicSupportLib_gf_PerformanceTestStopPerformanceTest ();
void MimicSupportLib_gf_PerformanceTestHeroSelectScreen ();
void MimicSupportLib_gf_PerformanceTestHeroesIdleBeforeGame ();
void MimicSupportLib_gf_PerformanceTestHeroesIdleGameStart ();
void MimicSupportLib_gf_PerformanceTestHeroesIdleMinionsFighting ();
void MimicSupportLib_gf_PerformanceTestTwoHeroesActiveStart ();
void MimicSupportLib_gf_PerformanceTestTwoHeroesActiveInLane ();
void MimicSupportLib_gf_PerformanceTestSixHeroesActiveStart ();
void MimicSupportLib_gf_PerformanceTestSixHeroesActiveInLane ();
void MimicSupportLib_gf_PerformanceTestTenHeroesActiveStart ();
void MimicSupportLib_gf_PerformanceTestTenHeroesActiveInLane ();
void MimicSupportLib_gf_PerformanceTestChaosTeamDisabled ();
void MimicSupportLib_gf_PerformanceTestOrderTeamPushingUnopposed ();
int MimicSupportLib_gf_StatTrackingGetTrackedPlayerFromString (string lp_chatString);
void MimicSupportLib_gf_StatTrackingStartTrackingforPlayer (int lp_player);
void MimicSupportLib_gf_StatTrackingBreakTrackingforPlayer (int lp_player);
void MimicSupportLib_gf_StatTrackingStopTrackingforPlayer (int lp_player);
void MimicSupportLib_gf_StatTrackingReportStats (int lp_reportPlayer);
int MimicSupportLib_gf_DataMiningGetManaRegenSourceIndex (string lp_name);
void MimicSupportLib_gf_DataMiningPeriodicDataSend ();
void MimicSupportLib_gf_DataMiningLogManaRegenForPlayer (int lp_player, string lp_regenSourceName, fixed lp_amount);
void MimicSupportLib_gf_DataMiningTurnDataMiningTriggersOnOff (bool lp_onOff);
void MimicSupportLib_gf_DataMiningSendStartGameEvents ();
void MimicSupportLib_gf_DataMiningSendEndOfGameDigests (int lp_team);
void MimicSupportLib_gf_SetHeroMasteryRingLevel (int lp_player);
void MimicSupportLib_gf_ChoGallHeroMasteryRing (int lp_player);
void MimicSupportLib_gf_QACheatsUIInit ();
void MimicSupportLib_gf_QACheatsPopulateBehaviorPulldown ();
void MimicSupportLib_gf_QACheatsAddBehaviorButtons ();
void MimicSupportLib_gf_QACheatsAddToggleCheckboxes ();
void MimicSupportLib_gf_QACheatsAddSpeedControls ();
void MimicSupportLib_gf_QACheatsPopulateSpawnUnitsPulldown ();
void MimicSupportLib_gf_QACheatsAddTeamCheckboxes ();
void MimicSupportLib_gf_QACheatsAddUnitControlButtons ();
void MimicSupportLib_gf_QACheatsAddCameraControls ();
void MimicSupportLib_gf_QACheatsPopulateSpawnItemsPulldown ();
void MimicSupportLib_gf_QACheatsAddSpawnItemButton ();
void MimicSupportLib_gf_QACheatsAddStructureControlsButtons ();
void MimicSupportLib_gf_QACheatsAddDebugRespawnButton ();
void MimicSupportLib_gf_QACheatsCompileBehaviors ();
void MimicSupportLib_gf_QACheatsCompileSpawnUnits ();
void MimicSupportLib_gf_QACheatsCompileSpawnItems ();
void MimicSupportLib_gf_QACheatsCleanseAllEffects ();
void MimicSupportLib_gf_DEBUGSoundRepeatRepeatSound ();
void MimicSupportLib_gf_DEBUGStartGame ();
void MimicSupportLib_gf_DEBUGSpawnCreepCamps ();
void MimicSupportLib_gf_DEBUGToggleSelection ();
void MimicSupportLib_gf_DEBUGToggleSpawnatCameraorBaseSelection ();
void MimicSupportLib_gf_DEBUGToggleMinionSpawning ();
void MimicSupportLib_gf_DEBUGToggleTrickleXP ();
void MimicSupportLib_gf_DEBUGToggleCombatText ();
void MimicSupportLib_gf_DEBUGToggleAllCombatText ();
void MimicSupportLib_gf_DEBUGToggleSavedHeroCheckbox ();
void MimicSupportLib_gf_DEBUGRefreshCooldownsforUnit (int lp_player, unit lp_unit);
void MimicSupportLib_gf_DEBUGToggleUpdateDeathUIElements ();
void MimicSupportLib_gf_DEBUGIncrementAllQuests (int lp_player, int lp_count);
fixed MimicSupportLib_gf_DebugGameTimeDelta ();
void MimicSupportLib_gf_DEBUGTalentsRespec (int lp_player, int lp_tier);
void MimicSupportLib_gf_DEBUGAddDynamicStacksofBehaviortoUnit (fixed lp_rate, string lp_behavior, int lp_player, unit lp_unit);

// Trigger Declarations
trigger MimicSupportLib_gt_IncludeSupport;
trigger MimicSupportLib_gt_AISpawningTest;
trigger MimicSupportLib_gt_AutomatedBuildTest;
trigger MimicSupportLib_gt_PerformanceTestSpawnHeroesForHeroesPerformanceTestMap;
trigger MimicSupportLib_gt_PerformanceTestRunPerformanceTest;
trigger MimicSupportLib_gt_PerformanceTestSetHeroChoices;
trigger MimicSupportLib_gt_PerformanceTestGetFPS;
trigger MimicSupportLib_gt_PerformanceTestOutputFPSToFile;
trigger MimicSupportLib_gt_PerformanceTestMaintainHeroHealth;
trigger MimicSupportLib_gt_DEBUGStatTrackingStartforPlayer;
trigger MimicSupportLib_gt_DEBUGStatTrackingLogBreak;
trigger MimicSupportLib_gt_DEBUGStatTrackingStop;
trigger MimicSupportLib_gt_DEBUGStatTrackingStartTrackingforAllPlayers;
trigger MimicSupportLib_gt_DEBUGStatTrackingStopTrackingforAllPlayers;
trigger MimicSupportLib_gt_StatTrackingDamageTracking;
trigger MimicSupportLib_gt_StatTrackingHealingTracking;
trigger MimicSupportLib_gt_StatTrackingGameOver;
trigger MimicSupportLib_gt_DataMiningListenForRegenGlobes;
trigger MimicSupportLib_gt_DataMiningPeriodicDataSendPeriodicEventTrigger;
trigger MimicSupportLib_gt_DEBUGForceHeroMasteryRing0;
trigger MimicSupportLib_gt_DEBUGForceHeroMasteryRing1;
trigger MimicSupportLib_gt_DEBUGForceHeroMasteryRing2;
trigger MimicSupportLib_gt_DEBUGForceHeroMasteryRing3;
trigger MimicSupportLib_gt_DEBUGForceHeroMasteryRingRando;
trigger MimicSupportLib_gt_QACheatsInit;
trigger MimicSupportLib_gt_ToggleCheatsDialog;
trigger MimicSupportLib_gt_QACheatsCloseButtonClicked;
trigger MimicSupportLib_gt_QACheatsAlliedControlCheckboxClicked;
trigger MimicSupportLib_gt_QACheatsShowMapCheckboxClicked;
trigger MimicSupportLib_gt_QACheatsVisionCheckboxClicked;
trigger MimicSupportLib_gt_QACheatsCooldownsCheckboxClicked;
trigger MimicSupportLib_gt_QACheatsGridCheckboxClicked;
trigger MimicSupportLib_gt_QACheatsVisualizeEffectsCheckboxClicked;
trigger MimicSupportLib_gt_QACheatsToggleFreeCheckboxClicked;
trigger MimicSupportLib_gt_QACheatsToggleSelectionCheckboxClicked;
trigger MimicSupportLib_gt_QACheatsToggleDisableWeaponsCheckboxChecked;
trigger MimicSupportLib_gt_QACheatsDisableWeaponsOnSpawn;
trigger MimicSupportLib_gt_QACheatsDisableWeaponsOnChenUlt;
trigger MimicSupportLib_gt_QACheatsUnitSelected;
trigger MimicSupportLib_gt_QACheatsBehaviorDropdownSelectionChange;
trigger MimicSupportLib_gt_QACheatsBehaviorApplyButtonClicked;
trigger MimicSupportLib_gt_QACheatsBehaviorRemoveButtonClicked;
trigger MimicSupportLib_gt_QACheatsBehaviorCleanseButtonClicked;
trigger MimicSupportLib_gt_QACheatsExecuteSpeedButtonClicked;
trigger MimicSupportLib_gt_QACheatsSpawnUnitsDropdownSelectionChange;
trigger MimicSupportLib_gt_QACheatsTeamCheckboxesClicked;
trigger MimicSupportLib_gt_QACheatsSpawnUnitsButtonClicked;
trigger MimicSupportLib_gt_QACheatsDebugKillUnitButtonClicked;
trigger MimicSupportLib_gt_QACheatsRefreshUnitButtonClicked;
trigger MimicSupportLib_gt_QACheatsMoveUnitButtonClicked;
trigger MimicSupportLib_gt_QACheatsRefreshCooldownsButtonClicked;
trigger MimicSupportLib_gt_QACheatsSetCameraAngleButtonClicked;
trigger MimicSupportLib_gt_QACheatsToggleDebugCameraCheckboxChecked;
trigger MimicSupportLib_gt_QACheatsSpawnItemButtonClicked;
trigger MimicSupportLib_gt_QACheatsRespawnStructuresButtonClicked;
trigger MimicSupportLib_gt_QACheatsKillStructuresButtonClicked;
trigger MimicSupportLib_gt_QACheatsDebugRespawnButtonClicked;
trigger MimicSupportLib_gt_DEBUGIntroVOInteractorItemintrovotest;
trigger MimicSupportLib_gt_DEBUGIntroVOInteractorUsage;
trigger MimicSupportLib_gt_DEBUGInspectTheBalanceProbebalanceprobe;
trigger MimicSupportLib_gt_DEBUGResetTheBalanceProbebalancereset;
trigger MimicSupportLib_gt_DEBUGTimedBalanceProbebalancetimer;
trigger MimicSupportLib_gt_DEBUGBalanceProbeTimerExpires;
trigger MimicSupportLib_gt_DEBUGEnableSoundRepeat;
trigger MimicSupportLib_gt_DEBUGSoundRepeatAdjustDelay;
trigger MimicSupportLib_gt_DEBUGSoundRepeatAbilityUsed;
trigger MimicSupportLib_gt_DEBUGPassiveExpBalancerpassivebalance;
trigger MimicSupportLib_gt_DEBUGWhichplayersareAIwhoisai;
trigger MimicSupportLib_gt_DEBUGEqualizeExperienceeqxp;
trigger MimicSupportLib_gt_DEBUGBoostExperienceeqexpboost;
trigger MimicSupportLib_gt_DEBUGXPTrickleOnlyxptrickleonly;
trigger MimicSupportLib_gt_DEBUGSuppressDebugMessages;
trigger MimicSupportLib_gt_DEBUGXPHeroxphero;
trigger MimicSupportLib_gt_DEBUGXPMinionxpminion;
trigger MimicSupportLib_gt_DEBUGXPStructurexpstructure;
trigger MimicSupportLib_gt_DEBUGXPCreepxpcreep;
trigger MimicSupportLib_gt_DEBUGHelphelp;
trigger MimicSupportLib_gt_DEBUGPlayerNumberplayernum;
trigger MimicSupportLib_gt_DEBUGToggleSelectiontogselection;
trigger MimicSupportLib_gt_DEBUGToggleShowXPValuestogshowxpvalues;
trigger MimicSupportLib_gt_DEBUGStartGamestartgame;
trigger MimicSupportLib_gt_DEBUGDisablePingLimitfreepings;
trigger MimicSupportLib_gt_DEBUGPauseGameStartTimerpausestart;
trigger MimicSupportLib_gt_DEBUGTurnOnNormalCreepCampscreepcamp;
trigger MimicSupportLib_gt_DEBUGRespawnCreepCampsrespawncamps;
trigger MimicSupportLib_gt_DEBUGSpawnHerospawnhero;
trigger MimicSupportLib_gt_DEBUGRespawnHerodebugrespawn;
trigger MimicSupportLib_gt_DEBUGSelectHerodebugselect;
trigger MimicSupportLib_gt_DEBUGKillHerodebugkill;
trigger MimicSupportLib_gt_DEBUGAIHeroMimicheromimic;
trigger MimicSupportLib_gt_DEBUGAISetHerosethero;
trigger MimicSupportLib_gt_DEBUGAISetAllHerosetallheroes;
trigger MimicSupportLib_gt_DEBUGLogRandomHeroesForPlayer;
trigger MimicSupportLib_gt_DEBUGLevelAIHerosheroxp;
trigger MimicSupportLib_gt_DEBUGToggleFloatingCombatTexttogcombattext;
trigger MimicSupportLib_gt_DEBUGToggleMinionSpawningtogminionspawn;
trigger MimicSupportLib_gt_DEBUGToggleMinionSystemPausedtogminionpause;
trigger MimicSupportLib_gt_DEBUGToggleMinionSystemOnOfftogminionsystem;
trigger MimicSupportLib_gt_DEBUGToggleMinionBonusXPOnOff;
trigger MimicSupportLib_gt_DEBUGToggleTowerSystemOnOfftogtowersystem;
trigger MimicSupportLib_gt_DEBUGTowerSystemOntowerson;
trigger MimicSupportLib_gt_DEBUGTowerSystemOfftowersoff;
trigger MimicSupportLib_gt_DEBUGToggleXPTrickletogtrickle;
trigger MimicSupportLib_gt_DEBUGScalecatchupXPBonuscatchupxpbonus;
trigger MimicSupportLib_gt_DEBUGScalecatchupXPPenaltycatchupxppenalty;
trigger MimicSupportLib_gt_DEBUGToggleSoloXPtogsoloxp;
trigger MimicSupportLib_gt_DEBUGScaleCampscampscale;
trigger MimicSupportLib_gt_DEBUGHaveAITakeOverAI;
trigger MimicSupportLib_gt_DEBUGHaveAITakeOverAIAll;
trigger MimicSupportLib_gt_DEBUGHaveAITakeOverAIAllOff;
trigger MimicSupportLib_gt_DEBUGHaveAITakeOverAIAllOn;
trigger MimicSupportLib_gt_DEBUGAIShowTalentBuildaishowtalentbuild;
trigger MimicSupportLib_gt_DEBUGAICycleThroughAllHeroesailoadeveryhero;
trigger MimicSupportLib_gt_DEBUGDisplayHeroAIDebugInfoaidebug;
trigger MimicSupportLib_gt_DEBUGDisplayDefenderAIDebugInfodefenderdebug;
trigger MimicSupportLib_gt_DEBUGVictorydebugvictory;
trigger MimicSupportLib_gt_DEBUGStructures1ShotMinionskillerstructures;
trigger MimicSupportLib_gt_DEBUGIncreasedMinionDamagekillerminions;
trigger MimicSupportLib_gt_DEBUGRefreshCooldownscdr;
trigger MimicSupportLib_gt_DEBUGDefeatdebugdefeat;
trigger MimicSupportLib_gt_DEBUGUpvotedebugupvote;
trigger MimicSupportLib_gt_DEBUGTiedebugtie;
trigger MimicSupportLib_gt_DEBUGToggleHeroAItogheroai;
trigger MimicSupportLib_gt_DEBUGStopAIThinkTree;
trigger MimicSupportLib_gt_DEBUGStartAIThinkTree;
trigger MimicSupportLib_gt_DEBUGStopRegenstopregen;
trigger MimicSupportLib_gt_DEBUGStopHealthRegenForAllPlayersnoregen;
trigger MimicSupportLib_gt_DEBUGToggleCoreShieldMechanictogcoreshield;
trigger MimicSupportLib_gt_DEBUGToggleDebugOutputtogdebug;
trigger MimicSupportLib_gt_DEBUGToggleForCinematicstogcine;
trigger MimicSupportLib_gt_DEBUGToggleForMapTexttogmaptext;
trigger MimicSupportLib_gt_DEBUGTurnOffWeather;
trigger MimicSupportLib_gt_DEBUGTurnOnMinionSpellResist;
trigger MimicSupportLib_gt_DEBUGCompleteAllQuests;
trigger MimicSupportLib_gt_DEBUGProgressAllQuests;
trigger MimicSupportLib_gt_DEBUGTeamFightPerfTest;
trigger MimicSupportLib_gt_DEBUGToggleJungleCampDebugtogcampdebug;
trigger MimicSupportLib_gt_DEBUGTargetJungleCreepState;
trigger MimicSupportLib_gt_DEBUG60SecondPause;
trigger MimicSupportLib_gt_DEBUGTriggerASave;
trigger MimicSupportLib_gt_DEBUGHeroIsAlive;
trigger MimicSupportLib_gt_DEBUGShortHeroDeath;
trigger MimicSupportLib_gt_DEBUGInvulnerableStructures;
trigger MimicSupportLib_gt_DEBUGRespawnStructures;
trigger MimicSupportLib_gt_DEBUGKillStructures;
trigger MimicSupportLib_gt_DEBUGCollectStructureData;
trigger MimicSupportLib_gt_DEBUGGameTime;
trigger MimicSupportLib_gt_DEBUGChooseTalent;
trigger MimicSupportLib_gt_DEBUGXPRange;
trigger MimicSupportLib_gt_DEBUGAfkSystem;
trigger MimicSupportLib_gt_DEBUGStartDPSTracker;
trigger MimicSupportLib_gt_DEBUGDPSTracker;
trigger MimicSupportLib_gt_DEBUGClearDPSTrackerStats;
trigger MimicSupportLib_gt_DEBUGDPSTrackerTimerExpires;
trigger MimicSupportLib_gt_DEBUGTemp;
trigger MimicSupportLib_gt_DEBUGDontStart;
trigger MimicSupportLib_gt_DEBUGEnableBuildingScaling;
trigger MimicSupportLib_gt_DEBUGEnabletownhalldetection;
trigger MimicSupportLib_gt_DEBUGToggleEUPTLogging;
trigger MimicSupportLib_gt_DEBUGGetBaseUnitStats;
trigger MimicSupportLib_gt_DEBUGWizardtoSappers;
trigger MimicSupportLib_gt_DEBUGSapperHealthGlobes;
trigger MimicSupportLib_gt_DEBUGSapperSuicideDamage;
trigger MimicSupportLib_gt_DEBUGSapperAttackDamage;
trigger MimicSupportLib_gt_DEBUGSapperHealth;
trigger MimicSupportLib_gt_DEBUGApplyArmorValueChange;
trigger MimicSupportLib_gt_DEBUGApplySpellPowerValueChange;
trigger MimicSupportLib_gt_GPU2021EnableDisableExtendedDurationXPGlobes;

// Library Initialization
void MimicSupportLib_InitVariables ();

